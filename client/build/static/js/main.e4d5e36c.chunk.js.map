{"version":3,"sources":["statics/logo.svg","components/Loading/OverlayLoading.tsx","config/NavigationRoutes.ts","components/NavBarProvider/hooks/ActiveNavLinkHook.ts","styles/mediaQueries.ts","components/WindowViewport/ViewportProvider.tsx","components/WindowViewport/hooks/windowViewportHook.ts","components/NavBar/BurgerButton.tsx","util/callTryCatch.ts","components/Onboarding/Login/hooks/navigateToLoginHook.ts","config/environment.ts","components/Onboarding/util/auth.ts","components/NavBar/hooks/logoutHook.ts","components/shared/sharedStyles.ts","components/shared/LinkItem.tsx","components/NavBar/shared/sharedStyles.ts","components/NavBar/ItemLink.tsx","components/NavBar/LogoutItem.tsx","components/shared/ProfileMenuTitle.ts","components/Brand/Brand.tsx","components/NavBar/NavBrand.tsx","components/NavBar/MobileMenu.tsx","components/NavBar/ProfileSubMenu.tsx","components/NavBar/NavBar.tsx","components/NavBarProvider/hooks/obtainActiveNavLinkHook.ts","components/NavBarProvider/NavBarProvider.tsx","util/httpClient.ts","components/Profile/hooks/fetchProfileHook.ts","components/shared/PagesContainer.tsx","pages/Dashboard.tsx","components/shared/BoldLabel.tsx","components/Buttons/LoadingButton.tsx","components/Forms/Checkbox.tsx","components/Forms/FormControl.tsx","components/Forms/InputField.tsx","components/Forms/MultipleSelectOptionField.tsx","components/Forms/PasswordField.tsx","components/Forms/SelectOptionField.tsx","components/Forms/RadioField.tsx","components/Forms/TextareaField.tsx","components/Forms/SliderField.tsx","components/Forms/Form.tsx","util/validations/requiredEmail.ts","util/validations/requiredPassword.ts","util/validations/requiredString.ts","util/validations/requiredNumber.ts","components/Onboarding/ForgotPassword/forgotPasswordSchema.ts","util/validations/requiredDate.ts","components/shared/onboardingStyles.ts","components/ToastMessage/hooks/toastMessageHook.ts","pages/ForgotPassword.tsx","components/Buttons/BaseButton.tsx","components/Jobs/hooks/fetchJobsHook.ts","components/Jobs/jobSearchSchema.ts","components/Jobs/JobsTable.tsx","components/JobStatistics/hooks/fetchJobSearchLocationsHook.ts","components/JobStatistics/hooks/fetchSearchSettingsHook.ts","pages/Jobs.tsx","components/AsyncResult/AsyncResult.tsx","components/CountVisitorsBadg/hooks/fetchCountVisitorsHook.ts","components/CountVisitorsBadg/CountVisitorsBadge.tsx","components/JobStatisticChart/JobStatisticChart.tsx","util/upperCaseWord.ts","components/JobStatistics/hooks/fetchJobsStatisticsHook.ts","components/Loading/ContentLoading.tsx","components/WorldVectorMap/WorldVectorMap.tsx","util/validations/confirmPasswordWith.ts","pages/JobStatistics.tsx","components/Dashboard/hooks/navigateToDashboardHook.ts","components/Onboarding/Login/loginSchema.ts","components/Onboarding/PasswordHints.tsx","pages/Login.tsx","components/Onboarding/ResetPassword/resetPasswordSchema.ts","pages/ResetPassword.tsx","components/Onboarding/Signup/signupSchema.ts","pages/Signup.tsx","styles/Theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_g","_defs","Container","styled","div","OverlayLoading","size","NAVIGATION_ROUTES","basePath","path","process","login","exact","signup","resetPassword","params","forgotPassword","dashboard","strict","jobs","statistics","NavBarContext","createContext","devices","smMediaQuery","mdMediaQuery","lgMediaQuery","xlMediaQuery","xxlMediaQuery","ViewportContext","ViewportProvider","children","useState","undefined","isTabletOrLarger","setIsTabletOrLarger","isDesktopOrLarger","setIsDesktopOrLarger","isTvOrLarger","setIsTvOrLarger","isBigTvOrLarger","setIsBigTvOrLarger","useEffect","tabletMatch","window","matchMedia","desktopMatch","tvMatch","bigTvMatch","handleTabletResize","matches","handleDesktopResize","handleTvResize","handleBigTvResize","addEventListener","attachEvent","removeEventListener","detachEvent","Provider","value","useViewport","useContext","BurgerIcon","MenuOutlined","StyledButton","Button","BurgerButton","onClick","icon","type","callTryCatch","fn","finallyfn","a","response","useNavigateToLogin","history","useHistory","goToLogin","useCallback","push","envName","isProduction","environment","isTestEnv","appVersion","REACT_APP_VERSION","authDomainApi","domainApi","auth","init","baseURL","withCredentials","useLogout","loading","setLoading","handleLogout","logout","error","console","mediumGathomFontStyle","css","LinkItem","Link","spaceXSmall","StyledAntdMenu","Menu","menuItemStyle","StyledAntdMenuItem","Item","ItemLink","props","to","label","reset","Title","span","LogoutItem","key","testId","ProfileMenuTitle","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","id","clipPath","d","ForwardRef","BiomaDarkBrandIcon","JobScrapSvg","Brand","className","BrandContainer","NavBrand","SubMenu","AntdMenu","StyledDrawer","Drawer","open","activeIndex","isAuthorized","onClose","onLogout","closable","placement","visible","inlineCollapsed","mode","selectedKeys","DashboardOutlined","BarChartOutlined","FileSearchOutlined","UserOutlined","Divider","StyledAntdSubMenu","ProfileSubMenu","loginOrLogoutItemComponent","CaretDownOutlined","Header","Layout","StyledHeader","ItemsContainer","NavBar","openMenu","setOpenMenu","openMobileMenu","closeMobileMenu","MobileMenu","useObtainActiveNavLink","pathname","useLocation","setActiveIndex","useMemo","NavBarProvider","httpClient","axios","create","useFetchProfile","data","setData","fetchProfile","post","query","profileQuery","errors","profile","StyledRow","Row","PagesContainer","headTitle","colXs","colMd","colLg","align","gutter","justify","lg","md","xs","Dashboard","xl","BoldLabel","LoadingButton","disabled","htmlType","AntdCheckbox","withConfig","shouldForwardProp","prop","includes","theme","colors","red","FormField","Form","FormHelperText","small","FormControl","StyledInput","Input","InputField","forwardRef","name","prefixIcon","placeholder","min","onChange","maxLength","ariaLabel","prefix","Select","StyledInputPassword","Password","PasswordField","iconRender","EyeTwoTone","EyeInvisibleOutlined","StyledSelect","Radio","SelectOptionField","options","showSearch","defaultValue","optionsTestId","filterOption","input","option","toLowerCase","labelInValue","selectedValue","style","borderColor","map","Option","TextArea","Slider","onSubmit","requiredEmail","conf","Joi","string","email","tlds","allow","required","messages","invalidEmail","requiredPassword","pattern","invalidPassword","requiredString","requiredNumber","number","forgotPasswordSchema","JoiBase","extend","DateExtension","object","OnboardingForm","FormTitle","Typography","FullWidthLoadingButton","StyledBrand","useToastMessage","notifyError","config","notification","notifySuccess","success","closeNotification","close","ForgotPassword","useForm","resolver","joiResolver","defaultValues","control","formState","handleSubmit","formData","message","description","emailError","sm","level","render","field","MailOutlined","BaseButton","bold","useFetchJobs","setError","fetchJobs","searchParam","get","perPage","page","year","location","fetchError","jobStatistics","jobSearchSchema","StyledInfoCircleOutlined","InfoCircleOutlined","JobsTable","totalCount","onPagination","pageSize","current","total","paginationConf","setPaginationConf","columns","dataIndex","_","row","content","href","link","company","date","moment","format","industries","senorityLevel","employmentType","jobDate","handleOnPageChange","oldSate","dataSource","pagination","position","rowKey","useFetchJobSearchLocations","fetchJobSearchLocations","useFetchSearchSettings","fetchSearchSettings","StyledBaseButton","StyledDatePicker","DatePicker","Jobs","jobSearchLocations","searchSettingsQuery","locationsOptions","locations","choice","jobQueries","setting","Date","getValues","submit","handleOnPagination","queryError","yearError","momentClass","picker","currentLocation","find","count","AsyncResult","status","onActionButtonClick","extra","subTitle","useFetchCountVisitors","fetchCountVisitors","countVisitors","StyledBadge","Badge","CountVisitorsBadge","totalVisits","overflowCount","ReactChart","register","zoomPlugin","TimeScale","Legend","BarController","BarElement","CategoryScale","LinearScale","Tooltip","JobStatisticChart","jobStatisticData","searchSettingsData","chartData","setChartData","initChartConfig","indexOfConfig","dataSets","queries","searchValues","forEach","chartConfig","backgroundColor","borderWidth","queryArray","dataArray","Array","item","monthIndex","jobDateAsYearMonth","split","findIndex","labels","datasets","maintainAspectRatio","responsive","plugins","display","text","charAt","toUpperCase","substr","zoom","pan","enabled","wheel","pinch","useFetchJobStatistics","fetchJobStatistics","ContentLoading","registerLocale","countriesEnJson","fieldName","MapContainer","locationsAlphaCods","selectedCountryAsAlphaCode","alphaCode","join","WorldVectorMap","selectedCountryName","onAreaClick","getAlpha2Code","handleOnClick","countryName","attributes","worldMap","layerProps","scrollDown","scrollTo","top","document","body","scrollHeight","behavior","JobStatistics","URLSearchParams","search","jobStatisticQuery","handleOnYearChange","handleOnSelectChange","selectedLocation","handleOnAreaClick","showIcon","useNavigateToDashboard","goToDashboard","loginSchema","password","List","ul","li","PasswordHints","LoginTitle","Login","username","passwordError","KeyOutlined","LoginOutlined","resetPasswordSchema","newPassword","confirmPassword","any","valid","passwordNotMatch","ResetPassword","useParams","userId","verificationId","newPasswordError","confirmPasswordError","signupSchema","firstName","lastName","Signup","first","last","firstNameError","lastNameError","highlightText","lightTheme","blue5","blue50","blue90","App","component","AppWithAuth","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e4d5e36c.chunk.js","sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 150,\n    height: 67,\n    viewBox: \"0 0 150 67\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.9343 32.294C31.9446 32.2781 31.9591 32.2655 31.9762 32.2575L46.7164 25.3994C46.7454 25.3859 46.779 25.3871 46.807 25.4026L53.4881 29.1032C53.5623 29.1443 53.5549 29.2533 53.4758 29.2839L39.8771 34.5564C39.8594 34.5633 39.844 34.575 39.8328 34.5903L35.9102 39.9133C35.9034 39.9225 35.8983 39.9327 35.895 39.9436L32.051 52.6119C32.0219 52.708 31.8851 52.706 31.8588 52.6091L28.0117 38.4386C28.0042 38.4113 28.0088 38.3821 28.0241 38.3582L31.9343 32.294Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.3103 35.4345C45.2848 35.3803 45.3124 35.3161 45.3693 35.2972L51.9972 33.0945C52.0731 33.0693 52.1464 33.139 52.1251 33.2161L49.2846 43.4951C49.2598 43.5846 49.1371 43.595 49.0976 43.511L45.3103 35.4345Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.95 29.9724V26.9094H61.85L54.3593 26.1834C54.255 26.1733 54.2074 26.31 54.2954 26.3669L59.8502 29.9564C59.8664 29.9669 59.8852 29.9724 59.9045 29.9724H76.95Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.95 7V25.378H67.0875C67.0323 25.378 66.9875 25.3332 66.9875 25.278V7.1C66.9875 7.04477 67.0323 7 67.0875 7H75.95Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.95 61L70.5727 31.6061C70.5739 31.55 70.5288 31.5039 70.4728 31.5039H67.122C67.0786 31.5039 67.0402 31.5319 67.0269 31.5733L64.0915 40.678C64.0883 40.6879 64.0867 40.6982 64.0867 40.7086V47.5637C64.0867 47.5775 64.0896 47.5912 64.0951 47.6038L69.95 61Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.0755 7.81006C58.0909 7.7822 58.1186 7.76334 58.1502 7.75926L63.9122 7.01458C63.972 7.00685 64.025 7.05344 64.025 7.11376V25.2671C64.025 25.3264 63.9737 25.3726 63.9147 25.3666L49.3629 23.862C49.2916 23.8546 49.251 23.7769 49.2856 23.7142L58.0755 7.81006Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.466 32.294C114.455 32.2781 114.441 32.2655 114.424 32.2575L99.6836 25.3994C99.6547 25.3859 99.621 25.3871 99.593 25.4026L92.9119 29.1032C92.8377 29.1443 92.8451 29.2533 92.9242 29.2839L106.523 34.5564C106.541 34.5633 106.556 34.575 106.567 34.5903L110.49 39.9133C110.497 39.9225 110.502 39.9327 110.505 39.9436L114.349 52.6119C114.378 52.708 114.515 52.706 114.541 52.6091L118.388 38.4386C118.396 38.4113 118.391 38.3821 118.376 38.3582L114.466 32.294Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.5897 35.4345C94.6151 35.3803 94.5875 35.3161 94.5307 35.2972L87.9028 33.0945C87.8269 33.0693 87.7536 33.139 87.7749 33.2161L90.6154 43.4951C90.6402 43.5846 90.7629 43.595 90.8024 43.511L94.5897 35.4345Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.95 29.9724V26.9094H85.05L92.5407 26.1834C92.645 26.1733 92.6926 26.31 92.6046 26.3669L87.0498 29.9564C87.0336 29.9669 87.0148 29.9724 86.9955 29.9724H76.95Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.95 7V25.378H78.8125C78.8677 25.378 78.9125 25.3332 78.9125 25.278V7.1C78.9125 7.04477 78.8677 7 78.8125 7H75.95Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.95 61L69.1735 31.6066C69.172 31.5503 69.2172 31.5039 69.2735 31.5039H72.7779C72.8214 31.5039 72.8598 31.5319 72.8731 31.5733L75.8085 40.678C75.8117 40.6879 75.8133 40.6982 75.8133 40.7086V47.5637C75.8133 47.5775 75.8104 47.5912 75.8049 47.6038L69.95 61Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.3995 7.81006C87.3841 7.7822 87.3564 7.76334 87.3248 7.75926L81.5628 7.01458C81.503 7.00685 81.45 7.05344 81.45 7.11376V25.2671C81.45 25.3264 81.5013 25.3726 81.5603 25.3666L96.1121 23.862C96.1834 23.8546 96.224 23.7769 96.1894 23.7142L87.3995 7.81006Z\",\n    fill: \"#414141\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.2879 52.3574H35.4891V53.7988H38.8875V46.5977H40.0887V53.7988C40.0887 53.9629 40.0555 54.1191 39.9891 54.2676C39.9266 54.4121 39.8406 54.5391 39.7313 54.6484C39.6258 54.7578 39.4988 54.8438 39.3504 54.9062C39.2059 54.9688 39.0516 55 38.8875 55H35.4891C35.325 55 35.1688 54.9688 35.0203 54.9062C34.8758 54.8438 34.7488 54.7578 34.6395 54.6484C34.534 54.5391 34.4481 54.4121 34.3817 54.2676C34.3192 54.1191 34.2879 53.9629 34.2879 53.7988V52.3574ZM47.5301 53.8457C47.5301 54.0059 47.4988 54.1562 47.4363 54.2969C47.3777 54.4375 47.2957 54.5605 47.1902 54.666C47.0887 54.7676 46.9676 54.8496 46.827 54.9121C46.6902 54.9707 46.5418 55 46.3817 55H43.282C43.1258 55 42.9774 54.9707 42.8367 54.9121C42.6961 54.8496 42.5731 54.7676 42.4676 54.666C42.366 54.5605 42.284 54.4375 42.2215 54.2969C42.1629 54.1562 42.1336 54.0059 42.1336 53.8457V49.9141C42.1336 49.7539 42.1629 49.6035 42.2215 49.4629C42.284 49.3223 42.366 49.2012 42.4676 49.0996C42.5731 48.9941 42.6961 48.9121 42.8367 48.8535C42.9774 48.791 43.1258 48.7598 43.282 48.7598H46.3817C46.5418 48.7598 46.6902 48.791 46.827 48.8535C46.9676 48.9121 47.0887 48.9941 47.1902 49.0996C47.2957 49.2012 47.3777 49.3223 47.4363 49.4629C47.4988 49.6035 47.5301 49.7539 47.5301 49.9141V53.8457ZM43.282 49.9141V53.8457H46.3817V49.9141H43.282ZM54.9774 53.8457C54.9774 54.0059 54.9461 54.1562 54.8836 54.2969C54.825 54.4375 54.743 54.5605 54.6375 54.666C54.5359 54.7676 54.4149 54.8496 54.2742 54.9121C54.1336 54.9707 53.9832 55 53.8231 55H50.6063C50.45 55 50.3016 54.9707 50.1609 54.9121C50.0203 54.8496 49.8973 54.7676 49.7918 54.666C49.6902 54.5605 49.6082 54.4375 49.5457 54.2969C49.4871 54.1562 49.4578 54.0059 49.4578 53.8457V46.3574H50.6063V49.8613C50.6141 49.709 50.6492 49.5664 50.7117 49.4336C50.7742 49.2969 50.8563 49.1797 50.9578 49.082C51.0633 48.9805 51.1844 48.9023 51.3211 48.8477C51.4578 48.7891 51.6043 48.7598 51.7606 48.7598H53.8231C53.9832 48.7598 54.1336 48.791 54.2742 48.8535C54.4149 48.9121 54.5359 48.9941 54.6375 49.0996C54.743 49.2012 54.825 49.3223 54.8836 49.4629C54.9461 49.6035 54.9774 49.7539 54.9774 49.9141V53.8457ZM50.6063 49.9141V53.8457H53.8231V49.9141H50.6063ZM60.6668 53.8457V52.3984H57.9305C57.7703 52.3984 57.6199 52.3691 57.4793 52.3105C57.3387 52.248 57.2156 52.166 57.1102 52.0645C57.0086 51.959 56.9266 51.8359 56.8641 51.6953C56.8055 51.5547 56.7762 51.4043 56.7762 51.2441V49.9141C56.7762 49.7539 56.8055 49.6035 56.8641 49.4629C56.9266 49.3223 57.0086 49.2012 57.1102 49.0996C57.2156 48.9941 57.3387 48.9121 57.4793 48.8535C57.6199 48.791 57.7703 48.7598 57.9305 48.7598H61.5809V49.9141H57.9305V51.2441H60.6668C60.827 51.2441 60.9754 51.2754 61.1121 51.3379C61.2527 51.3965 61.3758 51.4785 61.4813 51.584C61.5867 51.6855 61.6688 51.8066 61.7274 51.9473C61.7899 52.0879 61.8211 52.2383 61.8211 52.3984V53.8457C61.8211 54.0059 61.7899 54.1562 61.7274 54.2969C61.6688 54.4375 61.5867 54.5605 61.4813 54.666C61.3758 54.7676 61.2527 54.8496 61.1121 54.9121C60.9754 54.9707 60.827 55 60.6668 55H56.7762V53.8457H60.6668Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.7293 51.4023C78.5652 51.4023 78.409 51.3711 78.2606 51.3086C78.116 51.2422 77.9891 51.1562 77.8797 51.0508C77.7703 50.9414 77.6844 50.8145 77.6219 50.6699C77.5594 50.5215 77.5281 50.3652 77.5281 50.2012V47.7988C77.5281 47.6348 77.5594 47.4805 77.6219 47.3359C77.6844 47.1875 77.7703 47.0605 77.8797 46.9551C77.9891 46.8457 78.116 46.7598 78.2606 46.6973C78.409 46.6309 78.5652 46.5977 78.7293 46.5977H82.8074C82.9715 46.5977 83.1258 46.6309 83.2703 46.6973C83.4188 46.7598 83.5477 46.8457 83.657 46.9551C83.7664 47.0605 83.8524 47.1875 83.9149 47.3359C83.9774 47.4805 84.0086 47.6348 84.0086 47.7988V48.8828H82.8074V47.7988H78.7293V50.2012H82.8074C82.9715 50.2012 83.1258 50.2324 83.2703 50.2949C83.4188 50.3574 83.5477 50.4434 83.657 50.5527C83.7664 50.6621 83.8524 50.791 83.9149 50.9395C83.9774 51.084 84.0086 51.2383 84.0086 51.4023V53.7988C84.0086 53.9629 83.9774 54.1191 83.9149 54.2676C83.8524 54.4121 83.7664 54.5391 83.657 54.6484C83.5477 54.7578 83.4188 54.8438 83.2703 54.9062C83.1258 54.9688 82.9715 55 82.8074 55H78.6121C78.4481 55 78.2918 54.9688 78.1434 54.9062C77.9988 54.8438 77.8719 54.7578 77.7625 54.6484C77.6531 54.5391 77.5672 54.4121 77.5047 54.2676C77.4422 54.1191 77.4109 53.9629 77.4109 53.7988V52.7207H78.6121V53.7988H82.8074V51.4023H78.7293ZM87.2078 49.9141V53.8457H90.1844V52.791H91.3387V53.8457C91.3387 54.0059 91.3074 54.1562 91.2449 54.2969C91.1863 54.4375 91.1043 54.5605 90.9988 54.666C90.8973 54.7676 90.7762 54.8496 90.6356 54.9121C90.4949 54.9707 90.3445 55 90.1844 55H87.2078C87.0516 55 86.9031 54.9707 86.7625 54.9121C86.6219 54.8496 86.4988 54.7676 86.3934 54.666C86.2918 54.5605 86.2098 54.4375 86.1473 54.2969C86.0887 54.1562 86.0594 54.0059 86.0594 53.8457V49.9141C86.0594 49.7539 86.0887 49.6035 86.1473 49.4629C86.2098 49.3223 86.2918 49.2012 86.3934 49.0996C86.4988 48.9941 86.6219 48.9121 86.7625 48.8535C86.9031 48.791 87.0516 48.7598 87.2078 48.7598H90.1844C90.3445 48.7598 90.4949 48.791 90.6356 48.8535C90.7762 48.9121 90.8973 48.9941 90.9988 49.0996C91.1043 49.2012 91.1863 49.3223 91.2449 49.4629C91.3074 49.6035 91.3387 49.7539 91.3387 49.9141V50.9688H90.1844V49.9141H87.2078ZM94.4149 49.9141V55H93.2664V48.7598H94.4149V49.8613C94.4227 49.709 94.4578 49.5664 94.5203 49.4336C94.5828 49.2969 94.6649 49.1797 94.7664 49.082C94.8719 48.9805 94.993 48.9023 95.1297 48.8477C95.2664 48.7891 95.4129 48.7598 95.5692 48.7598H96.7938C96.9539 48.7598 97.1024 48.791 97.2391 48.8535C97.3797 48.9121 97.5027 48.9941 97.6082 49.0996C97.7137 49.2012 97.7957 49.3223 97.8543 49.4629C97.9168 49.6035 97.9481 49.7539 97.9481 49.9141V50.9688H96.7938V49.9141H94.4149ZM99.3836 52.2754C99.3836 52.1152 99.4129 51.9668 99.4715 51.8301C99.534 51.6895 99.616 51.5664 99.7176 51.4609C99.8231 51.3555 99.9461 51.2734 100.087 51.2148C100.227 51.1523 100.376 51.1211 100.532 51.1211H103.509V49.9141H99.741V48.7598H103.509C103.669 48.7598 103.819 48.791 103.96 48.8535C104.1 48.9121 104.221 48.9941 104.323 49.0996C104.429 49.2012 104.511 49.3223 104.569 49.4629C104.632 49.6035 104.663 49.7539 104.663 49.9141V55H103.509V53.9453C103.497 54.0898 103.458 54.2266 103.391 54.3555C103.325 54.4844 103.239 54.5977 103.134 54.6953C103.032 54.7891 102.915 54.8633 102.782 54.918C102.649 54.9727 102.509 55 102.36 55H100.532C100.376 55 100.227 54.9707 100.087 54.9121C99.9461 54.8496 99.8231 54.7676 99.7176 54.666C99.616 54.5605 99.534 54.4375 99.4715 54.2969C99.4129 54.1562 99.3836 54.0059 99.3836 53.8457V52.2754ZM100.532 53.8457H103.509V52.2754H100.532V53.8457ZM112.11 53.8457C112.11 54.0059 112.079 54.1562 112.016 54.2969C111.958 54.4375 111.876 54.5605 111.77 54.666C111.669 54.7676 111.548 54.8496 111.407 54.9121C111.266 54.9707 111.116 55 110.956 55H107.739V57.5195H106.591V48.7598H107.739V49.8145C107.751 49.666 107.79 49.5293 107.856 49.4043C107.923 49.2754 108.007 49.1641 108.108 49.0703C108.21 48.9727 108.327 48.8965 108.46 48.8418C108.596 48.7871 108.741 48.7598 108.893 48.7598H110.956C111.116 48.7598 111.266 48.791 111.407 48.8535C111.548 48.9121 111.669 48.9941 111.77 49.0996C111.876 49.2012 111.958 49.3223 112.016 49.4629C112.079 49.6035 112.11 49.7539 112.11 49.9141V53.8457ZM110.956 53.8457V49.9141H107.739V53.8457H110.956Z\",\n    fill: \"black\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 150,\n    height: 67,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.9f3f0e04.svg\";\nexport { ForwardRef as ReactComponent };","import {Spin} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n\nconst OverlayLoading: React.FC = () => (\n  <Container data-testid=\"loading-overlay\">\n    <Spin size=\"large\" />\n  </Container>\n);\n\nexport default OverlayLoading;\n","const BASE_PATH = process.env.PUBLIC_URL;\n\nconst NAVIGATION_ROUTES = {\n  basePath: {\n    path: BASE_PATH,\n  },\n  login: {\n    exact: true,\n    path: '/login',\n  },\n  signup: {\n    exact: true,\n    path: '/signup',\n  },\n  resetPassword: {\n    exact: true,\n    path: '/password/reset',\n    params: '/:userId/:verificationId',\n  },\n  forgotPassword: {\n    exact: true,\n    path: '/password/forgotten',\n  },\n  dashboard: {\n    strict: true,\n    path: '/dashboard',\n  },\n  jobs: {\n    strict: true,\n    path: '/jobs',\n  },\n  statistics: {\n    strict: true,\n    path: '/',\n  },\n};\n\nexport default NAVIGATION_ROUTES;\n","import {createContext, useContext} from 'react';\n\nconst NavBarContext = createContext('1');\n\nconst useActiveNavLink = () => useContext(NavBarContext);\n\nexport {NavBarContext, useActiveNavLink};\n","export const sm = 576;\nexport const md = 768;\nexport const lg = 992;\nexport const xl = 1200;\nexport const xxl = 1600;\n\nconst devices = {\n  smMediaQuery: `(min-width: ${sm}px)`,\n  mdMediaQuery: `(min-width: ${md}px)`,\n  lgMediaQuery: `(min-width: ${lg}px)`,\n  xlMediaQuery: `(min-width: ${xl}px)`,\n  xxlMediaQuery: `(min-width: ${xxl}px)`,\n};\n\nexport default devices;\n","import React, {createContext, useEffect, useState} from 'react';\n\nimport devices from '../../styles/mediaQueries';\n\ninterface ViewportSettings {\n  isTabletOrLarger?: boolean;\n  isDesktopOrLarger?: boolean;\n  isTvOrLarger?: boolean;\n  isBigTvOrLarger?: boolean;\n}\n\nexport const ViewportContext = createContext<ViewportSettings>({});\n\nconst ViewportProvider: React.FC = ({children}) => {\n  const [isTabletOrLarger, setIsTabletOrLarger] = useState<boolean | undefined>(\n    undefined\n  );\n  const [isDesktopOrLarger, setIsDesktopOrLarger] = useState<\n    boolean | undefined\n  >(undefined);\n  const [isTvOrLarger, setIsTvOrLarger] = useState<boolean | undefined>(\n    undefined\n  );\n  const [isBigTvOrLarger, setIsBigTvOrLarger] = useState<boolean | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    const tabletMatch = window.matchMedia(devices.mdMediaQuery);\n    const desktopMatch = window.matchMedia(devices.lgMediaQuery);\n    const tvMatch = window.matchMedia(devices.xlMediaQuery);\n    const bigTvMatch = window.matchMedia(devices.xxlMediaQuery);\n    function handleTabletResize() {\n      setIsTabletOrLarger(tabletMatch.matches);\n    }\n    function handleDesktopResize() {\n      setIsDesktopOrLarger(desktopMatch.matches);\n    }\n    function handleTvResize() {\n      setIsTvOrLarger(tvMatch.matches);\n    }\n    function handleBigTvResize() {\n      setIsBigTvOrLarger(bigTvMatch.matches);\n    }\n\n    if (tabletMatch.addEventListener) {\n      tabletMatch.addEventListener('change', handleTabletResize);\n      desktopMatch.addEventListener('change', handleDesktopResize);\n      tvMatch.addEventListener('change', handleTvResize);\n      bigTvMatch.addEventListener('change', handleBigTvResize);\n    } else if ((tabletMatch as any).attachEvent) {\n      (tabletMatch as any).attachEvent('change', handleTabletResize);\n      (desktopMatch as any).attachEvent('change', handleDesktopResize);\n      (tvMatch as any).attachEvent('change', handleTvResize);\n      (bigTvMatch as any).attachEvent('change', handleBigTvResize);\n    }\n\n    // Call handler right a away so state gets updated with initial window size\n    handleTabletResize();\n    handleDesktopResize();\n    handleTvResize();\n    handleBigTvResize();\n\n    return () => {\n      if ((tabletMatch as any).addEventListener) {\n        tabletMatch.removeEventListener('change', handleTabletResize);\n        desktopMatch.removeEventListener('change', handleDesktopResize);\n        tvMatch.removeEventListener('change', handleTvResize);\n        bigTvMatch.removeEventListener('change', handleBigTvResize);\n      } else if ((tabletMatch as any).attachEvent) {\n        (tabletMatch as any).detachEvent('change', handleTabletResize);\n        (desktopMatch as any).detachEvent('change', handleDesktopResize);\n        (tvMatch as any).detachEvent('change', handleTvResize);\n        (bigTvMatch as any).detachEvent('change', handleBigTvResize);\n      }\n    };\n  }, []);\n\n  return (\n    <ViewportContext.Provider\n      value={{\n        isTabletOrLarger,\n        isDesktopOrLarger,\n        isTvOrLarger,\n        isBigTvOrLarger,\n      }}\n    >\n      {isTabletOrLarger !== undefined && children}\n    </ViewportContext.Provider>\n  );\n};\n\nexport default ViewportProvider;\n","import {useContext} from 'react';\n\nimport {ViewportContext} from '../ViewportProvider';\n\nconst useViewport = () => useContext(ViewportContext);\n\nexport default useViewport;\n","import {MenuOutlined} from '@ant-design/icons';\n\nimport {Button} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst BurgerIcon = styled(MenuOutlined)`\n  font-size: 2rem;\n`;\n\nconst StyledButton = styled(Button)`\n  border: 0;\n`;\n\ninterface BurgerButtonProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nconst BurgerButton: React.FC<BurgerButtonProps> = ({onClick}) => (\n  <StyledButton\n    data-testid=\"burger-button\"\n    icon={<BurgerIcon />}\n    onClick={onClick}\n    type=\"text\"\n  />\n);\n\nexport default BurgerButton;\n","export const callTryCatch = async <E = Error, T = any>(\n  fn: () => Promise<T>,\n  finallyfn?: () => void\n) => {\n  try {\n    const response: T = await fn();\n    return [null, response];\n  } catch (error) {\n    return [error as E, null];\n  } finally {\n    finallyfn?.();\n  }\n};\n","import {useCallback} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport NAVIGATION_ROUTES from '../../../../config/NavigationRoutes';\n\nconst useNavigateToLogin = () => {\n  const history = useHistory();\n\n  const goToLogin = useCallback(() => {\n    history.push(NAVIGATION_ROUTES.login.path);\n  }, [history]);\n\n  return {goToLogin};\n};\n\nexport default useNavigateToLogin;\n","const envName = process.env.NODE_ENV;\nconst appVersion = process.env.REACT_APP_VERSION;\nconst isProduction = envName === 'production';\n\nconst environment = {\n  isTestEnv: envName === 'test',\n  appVersion,\n  envName,\n  authDomainApi: isProduction\n    ? 'https://www.ahmedhameed.dev'\n    : 'http://localhost:5000',\n  domainApi: isProduction\n    ? 'https://www.ahmedhameed.dev'\n    : 'http://localhost:5050',\n  isProduction,\n};\n\nexport default environment;\n","import {init} from 'nocknock-sdk';\nimport environment from '../../../config/environment';\n\nconst {authDomainApi} = environment;\n\nconst auth = init({baseURL: `${authDomainApi}`, withCredentials: true});\n\nexport default auth;\n","import {useCallback, useState} from 'react';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport useNavigateToLogin from '../../Onboarding/Login/hooks/navigateToLoginHook';\nimport auth from '../../Onboarding/util/auth';\n\nconst useLogout = () => {\n  const {goToLogin} = useNavigateToLogin();\n\n  const [loading, setLoading] = useState(false);\n\n  const handleLogout = useCallback(async () => {\n    setLoading(true);\n\n    const [error] = await callTryCatch(async () => auth.logout());\n\n    setLoading(false);\n\n    if (error) {\n      // eslint-disable-next-line no-console\n      console.error('<LogoutHook />', error);\n      return;\n    }\n\n    goToLogin();\n  }, [goToLogin]);\n\n  return {loading, handleLogout};\n};\n\nexport default useLogout;\n","import {css} from 'styled-components';\n\nconst mediumGathomFontStyle = css`\n  font-family: 'Gotham Medium', 'Roboto', sans-serif;\n`;\n\nexport {mediumGathomFontStyle};\n","import {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {mediumGathomFontStyle} from './sharedStyles';\n\nconst LinkItem = styled(Link)`\n  ${mediumGathomFontStyle}\n`;\n\nexport default LinkItem;\n","import {Menu} from 'antd';\nimport styled, {css} from 'styled-components';\n\nconst spaceXSmall = css`\n  padding: 0 1.4rem;\n`;\n\nconst StyledAntdMenu = styled(Menu)`\n  display: flex;\n  justify-content: flex-end;\n  height: 100%;\n  border-bottom: 0;\n`;\n\nconst menuItemStyle = css`\n  &&.ant-menu-item,\n  &&.ant-menu-submenu {\n    top: 0px;\n    height: 100%;\n    margin-top: 0px;\n  }\n`;\n\nexport {spaceXSmall, StyledAntdMenu, menuItemStyle};\n","import {Menu} from 'antd';\nimport React from 'react';\n\nimport styled from 'styled-components';\nimport LinkItem from '../shared/LinkItem';\nimport {menuItemStyle} from './shared/sharedStyles';\n\nconst StyledAntdMenuItem = styled(Menu.Item)`\n  ${menuItemStyle}\n`;\ninterface ItemLinkProps {\n  to: string;\n  label: string;\n  icon?: React.ReactNode;\n  onClick?: () => void;\n}\n\nconst ItemLink: React.FC<ItemLinkProps> = (props) => {\n  const {to, label, ...reset} = props;\n  return (\n    <StyledAntdMenuItem {...reset} data-testid=\"navbar-item\">\n      <LinkItem to={to}>{label}</LinkItem>\n    </StyledAntdMenuItem>\n  );\n};\n\nexport default ItemLink;\n","import {Menu} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {mediumGathomFontStyle} from '../shared/sharedStyles';\n\nconst Title = styled.span`\n  ${mediumGathomFontStyle}\n`;\n\ninterface LogoutButtonProps {\n  label: string;\n  icon?: React.ReactNode;\n  key: string;\n  onClick?: () => void;\n  testId?: string;\n}\n\nconst LogoutItem: React.FC<LogoutButtonProps> = (props) => {\n  const {label, key, testId, ...reset} = props;\n\n  return (\n    <Menu.Item {...reset} data-testid={testId} key={key}>\n      <Title>{label}</Title>\n    </Menu.Item>\n  );\n};\n\nexport default LogoutItem;\n","import styled from 'styled-components';\nimport {mediumGathomFontStyle} from './sharedStyles';\n\nconst ProfileMenuTitle = styled.span`\n  ${mediumGathomFontStyle}\n`;\n\nexport {ProfileMenuTitle};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {ReactComponent as JobScrapSvg} from '../../statics/logo.svg';\n\nconst BiomaDarkBrandIcon = styled(JobScrapSvg)`\n  width: 15rem;\n`;\n\ninterface BrandProps {\n  className?: string;\n}\n\nconst Brand: React.FC<BrandProps> = ({className}) => (\n  <BiomaDarkBrandIcon className={className} />\n);\n\nexport default Brand;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport NAVIGATION_ROUTES from '../../config/NavigationRoutes';\nimport Brand from '../Brand/Brand';\n\nconst BrandContainer = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst NavBrand: React.FC = () => (\n  <BrandContainer>\n    <Link to={NAVIGATION_ROUTES.statistics.path}>\n      <Brand />\n    </Link>\n  </BrandContainer>\n);\n\nexport default NavBrand;\n","import {\n  BarChartOutlined,\n  DashboardOutlined,\n  FileSearchOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport {Menu as AntdMenu, Drawer} from 'antd';\nimport React from 'react';\n\nimport styled from 'styled-components';\nimport NAVIGATION_ROUTES from '../../config/NavigationRoutes';\nimport {ProfileMenuTitle} from '../shared/ProfileMenuTitle';\nimport ItemLink from './ItemLink';\nimport LogoutItem from './LogoutItem';\nimport NavBrand from './NavBrand';\nimport {spaceXSmall} from './shared/sharedStyles';\n\nconst {SubMenu} = AntdMenu;\n\nconst StyledDrawer = styled(Drawer)`\n  .ant-drawer-header {\n    ${spaceXSmall}\n  }\n  .ant-drawer-body {\n    padding: 2.4rem 0;\n  }\n`;\n\ninterface MenuProps {\n  open: boolean;\n  activeIndex: string;\n  onClose?: () => void;\n  onLogout?: () => void;\n  isAuthorized?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = ({\n  open,\n  activeIndex,\n  isAuthorized,\n  onClose,\n  onLogout,\n}) => (\n  <StyledDrawer\n    closable={false}\n    data-testid=\"drawer-navigation\"\n    key=\"drawer-menu\"\n    onClose={onClose}\n    placement=\"left\"\n    title={<NavBrand />}\n    visible={open}\n  >\n    <AntdMenu\n      inlineCollapsed={false}\n      mode=\"inline\"\n      selectedKeys={[activeIndex]}\n    >\n      {isAuthorized && (\n        <ItemLink\n          icon={<DashboardOutlined />}\n          key=\"1\"\n          label=\"Dashboard\"\n          onClick={onClose}\n          to={NAVIGATION_ROUTES.dashboard.path}\n        />\n      )}\n\n      <ItemLink\n        icon={<BarChartOutlined />}\n        key=\"2\"\n        label=\"Statistics\"\n        onClick={onClose}\n        to={NAVIGATION_ROUTES.statistics.path}\n      />\n\n      <ItemLink\n        icon={<FileSearchOutlined />}\n        key=\"3\"\n        label=\"Jobs\"\n        onClick={onClose}\n        to={NAVIGATION_ROUTES.jobs.path}\n      />\n\n      <SubMenu\n        icon={<UserOutlined />}\n        key=\"mobile-sub-menu\"\n        title={<ProfileMenuTitle>Settings</ProfileMenuTitle>}\n      >\n        <AntdMenu.Divider />\n\n        {isAuthorized ? (\n          <LogoutItem\n            key=\"8\"\n            label=\"Logout\"\n            onClick={onLogout}\n            testId=\"navbar-logout-item\"\n          />\n        ) : (\n          <ItemLink key=\"8\" label=\"Login\" to={NAVIGATION_ROUTES.login.path} />\n        )}\n      </SubMenu>\n    </AntdMenu>\n  </StyledDrawer>\n);\n\nexport default Menu;\n","import {CaretDownOutlined, UserOutlined} from '@ant-design/icons';\nimport {Menu} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {ProfileMenuTitle} from '../shared/ProfileMenuTitle';\n\nimport {menuItemStyle, StyledAntdMenu} from './shared/sharedStyles';\n\nconst StyledAntdSubMenu = styled(Menu.SubMenu)`\n  ${menuItemStyle};\n`;\n\n/**\n * TODO: fix Submenu bug @see https://github.com/ant-design/ant-design/issues/27176\n */\ninterface ProfileSubMenuProps {\n  activeIndex: string;\n  onClose?: () => void;\n  onClick?: () => void;\n  className?: string;\n  loginOrLogoutItemComponent: React.ReactNode;\n}\n\nconst ProfileSubMenu: React.FC<ProfileSubMenuProps> = ({\n  activeIndex,\n  className,\n  loginOrLogoutItemComponent,\n}) => (\n  <StyledAntdMenu\n    className={className}\n    data-testid=\"profile-tablet-submenu\"\n    mode=\"horizontal\"\n    selectedKeys={[activeIndex]}\n  >\n    <StyledAntdSubMenu\n      icon={<UserOutlined />}\n      key=\"profileMenu\"\n      title={\n        <ProfileMenuTitle>\n          Settings <CaretDownOutlined />\n        </ProfileMenuTitle>\n      }\n    >\n      {loginOrLogoutItemComponent}\n    </StyledAntdSubMenu>\n  </StyledAntdMenu>\n);\n\nexport default ProfileSubMenu;\n","import {\n  BarChartOutlined,\n  DashboardOutlined,\n  FileSearchOutlined,\n} from '@ant-design/icons';\nimport {Layout} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport styled from 'styled-components';\nimport NAVIGATION_ROUTES from '../../config/NavigationRoutes';\nimport {useActiveNavLink} from '../NavBarProvider/hooks/ActiveNavLinkHook';\nimport useViewport from '../WindowViewport/hooks/windowViewportHook';\nimport BurgerButton from './BurgerButton';\nimport useLogout from './hooks/logoutHook';\nimport ItemLink from './ItemLink';\nimport LogoutItem from './LogoutItem';\nimport MobileMenu from './MobileMenu';\nimport NavBrand from './NavBrand';\nimport ProfileSubMenu from './ProfileSubMenu';\nimport {spaceXSmall, StyledAntdMenu} from './shared/sharedStyles';\n\nconst {Header} = Layout;\n\nconst StyledHeader = styled(Header)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n  ${spaceXSmall}\n`;\n\nconst ItemsContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  height: 100%;\n`;\n\ninterface NavBarProps {\n  isAuthorized?: boolean;\n}\n\nconst NavBar: React.FC<NavBarProps> = ({isAuthorized}) => {\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const {handleLogout} = useLogout();\n  const activeIndex = useActiveNavLink();\n  const {isTabletOrLarger} = useViewport();\n\n  const openMobileMenu = useCallback(() => {\n    setOpenMenu(true);\n  }, [setOpenMenu]);\n\n  const closeMobileMenu = useCallback(() => {\n    setOpenMenu(false);\n  }, [setOpenMenu]);\n\n  return (\n    <>\n      <StyledHeader className=\"header\">\n        <NavBrand />\n        {/* <BanMenuContainer> */}\n        <ItemsContainer>\n          {isTabletOrLarger && (\n            <StyledAntdMenu\n              data-testid=\"tablet-navbar\"\n              mode=\"horizontal\"\n              selectedKeys={[activeIndex]}\n            >\n              {isAuthorized && (\n                <ItemLink\n                  icon={<DashboardOutlined />}\n                  key=\"1\"\n                  label=\"Dashboard\"\n                  to={NAVIGATION_ROUTES.dashboard.path}\n                />\n              )}\n\n              <ItemLink\n                icon={<BarChartOutlined />}\n                key=\"2\"\n                label=\"Statistics\"\n                to={NAVIGATION_ROUTES.statistics.path}\n              />\n\n              <ItemLink\n                icon={<FileSearchOutlined />}\n                key=\"3\"\n                label=\"Jobs\"\n                to={NAVIGATION_ROUTES.jobs.path}\n              />\n            </StyledAntdMenu>\n          )}\n        </ItemsContainer>\n        {/*\n          /**\n              {isTabletOrLarger ? (\n                <ProfileSubMenu\n                  activeIndex={activeIndex}\n                  onLogout={handleLogout}\n                />\n              ) : (\n                <BurgerButton onClick={openMobileMenu} />\n              )}\n           * \n           */}\n        {isTabletOrLarger && (\n          <ProfileSubMenu\n            activeIndex={activeIndex}\n            loginOrLogoutItemComponent={\n              isAuthorized ? (\n                <LogoutItem\n                  key=\"9\"\n                  label=\"Logout\"\n                  onClick={handleLogout}\n                  testId=\"navbar-logout-item\"\n                />\n              ) : (\n                <ItemLink\n                  key=\"9\"\n                  label=\"Login\"\n                  to={NAVIGATION_ROUTES.login.path}\n                />\n              )\n            }\n          />\n        )}\n        {!isTabletOrLarger && <BurgerButton onClick={openMobileMenu} />}\n        {/* </BanMenuContainer> */}\n      </StyledHeader>\n\n      {!isTabletOrLarger && (\n        <MobileMenu\n          activeIndex={activeIndex}\n          isAuthorized={isAuthorized}\n          onClose={closeMobileMenu}\n          onLogout={handleLogout}\n          open={openMenu}\n        />\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","import {useMemo, useState} from 'react';\nimport {useLocation} from 'react-router-dom';\nimport NAVIGATION_ROUTES from '../../../config/NavigationRoutes';\n\nconst {dashboard, statistics, jobs} = NAVIGATION_ROUTES;\n\nconst useObtainActiveNavLink = () => {\n  const {pathname} = useLocation();\n  const [activeIndex, setActiveIndex] = useState<string>('1');\n\n  useMemo(() => {\n    switch (true) {\n      case pathname === dashboard.path:\n        setActiveIndex('1');\n        break;\n\n      case pathname === statistics.path:\n        setActiveIndex('2');\n        break;\n\n      case pathname === jobs.path:\n        setActiveIndex('3');\n        break;\n\n      default:\n        setActiveIndex('0');\n    }\n  }, [pathname, setActiveIndex]);\n\n  return {\n    activeIndex,\n  };\n};\n\nexport default useObtainActiveNavLink;\n","import React from 'react';\nimport {NavBarContext} from './hooks/ActiveNavLinkHook';\nimport useObtainActiveNavLink from './hooks/obtainActiveNavLinkHook';\n\nconst NavBarProvider: React.FC = ({children}) => {\n  const {activeIndex} = useObtainActiveNavLink();\n\n  return (\n    <NavBarContext.Provider value={activeIndex}>\n      {children}\n    </NavBarContext.Provider>\n  );\n};\n\nexport default NavBarProvider;\n","import axios from 'axios';\n\nconst httpClient = axios.create({\n  withCredentials: true,\n});\n\nexport {httpClient};\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\n\ninterface ProfileData {\n  id: string;\n  email: string;\n  gender: string;\n  name: {\n    first: string;\n    last: string;\n  };\n}\n\ninterface ProfileQuery {\n  errors?: any[];\n  data?: {\n    profile: ProfileData;\n  };\n}\n\nconst useFetchProfile = () => {\n  const [data, setData] = useState<ProfileData | undefined>();\n  const [loading, setLoading] = useState(true);\n\n  const fetchProfile = useCallback(async () => {\n    setLoading(true);\n\n    const [error, response] = await callTryCatch(async () =>\n      httpClient.post<any, AxiosResponse<ProfileQuery>>(\n        `${environment.authDomainApi}/nodeys/v1/graphql`,\n        {\n          query: `\n            query Profile {\n                profile {\n                    id\n                    email\n                    gender\n                    name {\n                        first\n                        last\n                    }\n                }\n            }\n        `,\n        }\n      )\n    );\n\n    setLoading(false);\n\n    const profileQuery = (response as AxiosResponse<ProfileQuery>)?.data;\n\n    if (error || profileQuery.errors) {\n      return null;\n    }\n    setData(profileQuery.data?.profile);\n    return profileQuery;\n  }, [setLoading]);\n\n  return {\n    loading,\n    data,\n    fetchProfile,\n  };\n};\n\nexport default useFetchProfile;\n","import {Col, Row} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled(Row)`\n  padding: 4rem 1rem;\n`;\n\ninterface OrderContainerProps {\n  headTitle?: React.ReactNode;\n  colXs?: number;\n  colMd?: number;\n  colLg?: number;\n}\n\nconst PagesContainer: React.FC<OrderContainerProps> = ({\n  children,\n  headTitle,\n  colXs,\n  colMd,\n  colLg,\n}) => (\n  <StyledRow align=\"top\" gutter={[0, 16]} justify=\"center\">\n    <Col lg={colLg || 16} md={colMd || 22} xs={colXs || 23}>\n      {headTitle && headTitle}\n\n      {children}\n    </Col>\n  </StyledRow>\n);\n\nexport default PagesContainer;\n","import {Col, Row} from 'antd';\nimport React from 'react';\n// import {useTranslation} from 'react-i18next';\n// import styled from 'styled-components';\n// import AsyncResult from '../components/AsyncResult/AsyncResult';\n// import BaseButton from '../components/Buttons/BaseButton';\n\n// import NotificationList from '../components/Dashboard/NotificationList';\n// import OverlayLoading from '../components/Loading/OverlayLoading';\n// import useNavigateToOrderAnalysis from '../components/OrderAnalysis/hooks/navigateToOrderAnalysisHook';\n// import useNavigateToPatients from '../components/Patients/hooks/navigateToPatientsHook';\n// import useFetchProfileAccount from '../components/ProfileAccount/hooks/fetchProfileAccountHook';\n// import BoldLabel from '../components/shared/BoldLabel';\nimport PagesContainer from '../components/shared/PagesContainer';\n// import devices from '../styles/mediaQueries';\n\nconst Dashboard: React.FC = () => (\n  // const {loading, data, errorState, refetchProfileAccount} =\n  //   useFetchProfileAccount();\n  // const {goToOrderAnalysis} = useNavigateToOrderAnalysis();\n  // const {goToPatients} = useNavigateToPatients();\n\n  // if (loading) return <OverlayLoading />;\n\n  // if (errorState)\n  //   return (\n  //     <AsyncResult\n  //       onActionButtonClick={refetchProfileAccount}\n  //       status={errorState}\n  //     />\n  //   );\n\n  <PagesContainer>\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col lg={16} md={20} xl={14} xs={23}>\n        Dashboard page\n      </Col>\n    </Row>\n  </PagesContainer>\n);\nexport default Dashboard;\n","import styled from 'styled-components';\nimport {mediumGathomFontStyle} from './sharedStyles';\n\nconst BoldLabel = styled.span`\n  ${mediumGathomFontStyle}\n`;\n\nexport default BoldLabel;\n","import {Button} from 'antd';\nimport {ButtonType} from 'antd/es/button';\nimport {ButtonHTMLType} from 'antd/lib/button/button';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport React from 'react';\nimport BoldLabel from '../shared/BoldLabel';\n\ninterface LoadingButtonProps {\n  loading?: boolean;\n  icon?: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  className?: string;\n  size?: SizeType;\n  htmlType?: ButtonHTMLType;\n  disabled?: boolean;\n  type?: ButtonType;\n  testId?: string;\n}\n\nconst LoadingButton: React.FC<LoadingButtonProps> = ({\n  children,\n  className,\n  disabled,\n  htmlType,\n  icon,\n  loading,\n  onClick,\n  size,\n  type,\n  testId,\n}) => (\n  <Button\n    className={className}\n    data-testid={testId}\n    disabled={disabled}\n    htmlType={htmlType}\n    icon={icon}\n    loading={loading}\n    onClick={onClick}\n    size={size}\n    type={type || 'primary'}\n  >\n    <BoldLabel>{children}</BoldLabel>\n  </Button>\n);\n\nexport default LoadingButton;\n","import {Checkbox as AntdCheckbox} from 'antd';\nimport {\n  AbstractCheckboxProps,\n  CheckboxChangeEvent,\n} from 'antd/lib/checkbox/Checkbox';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledAntdCheckbox = styled(AntdCheckbox).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n\n  return error\n    ? `\n    .ant-checkbox .ant-checkbox-inner {\n      border-color: ${props.theme.colors.red};\n      border-width: 0.2rem;\n    }\n  `\n    : '';\n});\n\ninterface CheckboxProps extends AbstractCheckboxProps<CheckboxChangeEvent> {\n  label?: React.ReactNode;\n  value?: boolean;\n  className?: string;\n  error?: string;\n  ariaLabel: string;\n  testId?: string;\n  onChange?: (event: CheckboxChangeEvent) => void;\n}\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({onChange, ariaLabel, value, className, error, testId, label}, ref) => (\n    <StyledAntdCheckbox\n      aria-label={ariaLabel}\n      checked={value}\n      className={className}\n      data-testid={testId}\n      error={!!error}\n      onChange={onChange}\n      ref={ref}\n    >\n      {label}\n    </StyledAntdCheckbox>\n  )\n);\n\nexport {Checkbox};\n","import {Form} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {mediumGathomFontStyle} from '../shared/sharedStyles';\n\nconst FormField = styled(Form.Item)`\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n  .ant-form-item-label {\n    ${mediumGathomFontStyle}\n    padding: 0;\n    text-align: left;\n    label {\n      line-height: 1.5rem;\n      white-space: pre-wrap;\n      &:after {\n        content: '';\n      }\n    }\n  }\n`;\n\nexport const FormHelperText = styled.small`\n  display: flex;\n  font-size: 1.1rem;\n`;\n\ninterface FormControlProps {\n  label?: React.ReactNode;\n  className?: string;\n  error?: string;\n}\n\nconst FormControl: React.FC<FormControlProps> = ({\n  children,\n  className,\n  label,\n  error,\n}) => (\n  <FormField className={className} label={label}>\n    {children}\n    <FormHelperText\n      className=\"ant-form-item-explain ant-form-item-explain-error\"\n      data-testid={error ? 'input-error' : ''}\n    >\n      {error || <>&nbsp;</>}\n    </FormHelperText>\n  </FormField>\n);\n\nexport {FormControl};\n","import {Input} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled(Input).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n  const {red} = props.theme.colors;\n\n  return `\n    width: 100%;\n    ${error ? `border-color: ${red};` : ''}\n    .ant-input-number-handler-wrap {\n      display: none;\n    }\n`;\n});\n\ninterface InputFieldProps {\n  prefixIcon?: React.ReactNode;\n  placeholder?: string;\n  name?: string;\n  disabled?: boolean;\n  size?: SizeType;\n  type?: 'text' | 'number' | 'password';\n  value?: string;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  testId?: string;\n  ariaLabel: string;\n  error?: boolean;\n  maxLength?: number;\n  min?: number;\n}\n\nconst InputField = forwardRef<Input, InputFieldProps>(\n  (\n    {\n      name,\n      disabled,\n      type,\n      prefixIcon,\n      placeholder,\n      size,\n      value,\n      error,\n      min,\n      onChange,\n      testId,\n      maxLength,\n      ariaLabel,\n    },\n    ref\n  ) => (\n    <StyledInput\n      aria-label={ariaLabel}\n      data-testid={testId}\n      disabled={disabled}\n      error={error}\n      maxLength={maxLength}\n      min={min}\n      name={name}\n      onChange={onChange}\n      placeholder={placeholder}\n      prefix={prefixIcon}\n      ref={ref}\n      size={size}\n      type={type || 'text'}\n      value={value}\n    />\n  )\n);\n\nexport {InputField};\n","import {Select} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport {LabeledValue, OptionType, RefSelectProps} from 'antd/lib/select';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled(Select).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n  const {red} = props.theme.colors;\n\n  return `\n    width: 100%;\n    .ant-select-selector {\n      ${error ? `border-color: ${red} !important;` : ''}\n    }\n`;\n});\n\ninterface MultipleSelectOptionFieldProps {\n  placeholder?: string;\n  onChange?: (selectedValue: (string | number)[], option?: OptionType) => void;\n  value?: (string | number)[];\n  disabled?: boolean;\n  defaultValue?: string[];\n  options: LabeledValue[];\n  className?: string;\n  testId?: string;\n  optionsTestId?: string;\n  size?: SizeType;\n  ariaLabel: string;\n  ref?: React.ForwardedRef<RefSelectProps>;\n  ariaRequired: boolean;\n  ariaExpanded: boolean;\n  error?: boolean;\n}\n\nconst MultipleSelectOptionField = forwardRef<\n  RefSelectProps,\n  MultipleSelectOptionFieldProps\n>(\n  (\n    {\n      className,\n      onChange,\n      options,\n      placeholder,\n      size,\n      error,\n      testId,\n      value,\n      defaultValue,\n      ariaLabel,\n      optionsTestId,\n      disabled,\n      ariaRequired,\n      ariaExpanded,\n    },\n    ref\n  ) => (\n    <StyledSelect\n      allowClear\n      aria-expanded={ariaExpanded}\n      aria-label={ariaLabel}\n      aria-required={ariaRequired}\n      className={className}\n      data-testid={testId}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      error={error}\n      mode=\"multiple\"\n      onChange={(selectedValue) =>\n        onChange?.(selectedValue as (string | number)[])\n      }\n      placeholder={placeholder}\n      ref={ref}\n      showArrow\n      showSearch={false}\n      size={size}\n      value={value}\n    >\n      {options.map((option) => (\n        <Select.Option\n          data-testid={optionsTestId}\n          key={option.value}\n          value={option.value}\n        >\n          {option.label}\n        </Select.Option>\n      ))}\n    </StyledSelect>\n  )\n);\n\nexport {MultipleSelectOptionField};\n","import {EyeInvisibleOutlined, EyeTwoTone} from '@ant-design/icons';\nimport {Input} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledInputPassword = styled(Input.Password).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n  const {red} = props.theme.colors;\n\n  return `\n    width: 100%;\n    ${error ? `border-color: ${red};` : ''}\n    .ant-input-number-handler-wrap {\n      display: none;\n    }\n`;\n});\ninterface PasswordFieldProps {\n  prefixIcon?: React.ReactNode;\n  placeholder?: string;\n  name?: string;\n  size?: SizeType;\n  value?: string;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  testId?: string;\n  ariaLabel: string;\n  error?: boolean;\n}\n\nconst PasswordField = forwardRef<Input, PasswordFieldProps>(\n  (\n    {\n      name,\n      prefixIcon,\n      error,\n      placeholder,\n      ariaLabel,\n      value,\n      onChange,\n      size,\n      testId,\n    },\n    ref\n  ) => (\n    <StyledInputPassword\n      aria-label={ariaLabel}\n      data-testid={testId}\n      error={error}\n      iconRender={(visible) =>\n        visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n      }\n      name={name}\n      onChange={onChange}\n      placeholder={placeholder}\n      prefix={prefixIcon}\n      ref={ref}\n      size={size}\n      value={value}\n    />\n  )\n);\n\nexport {PasswordField};\n","import {Select} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport {LabeledValue, OptionType, RefSelectProps} from 'antd/lib/select';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledSelect = styled(Select).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n  const {red} = props.theme.colors;\n\n  return `\n    width: 100%;\n    .ant-select-selector {\n      ${error ? `border-color: ${red} !important;` : ''}\n    }\n`;\n});\n\ninterface SelectOptionFieldProps {\n  showSearch?: boolean;\n  placeholder?: string;\n  onChange?: (selectedValue: LabeledValue, option?: OptionType) => void;\n  value?: LabeledValue;\n  disabled?: boolean;\n  defaultValue?: LabeledValue;\n  options: LabeledValue[];\n  className?: string;\n  testId?: string;\n  optionsTestId?: string;\n  size?: SizeType;\n  ref?: React.ForwardedRef<RefSelectProps>;\n  ariaLabel: string;\n  error?: boolean;\n}\n\nconst SelectOptionField = forwardRef<RefSelectProps, SelectOptionFieldProps>(\n  (\n    {\n      className,\n      onChange,\n      options,\n      placeholder,\n      showSearch,\n      size,\n      testId,\n      value,\n      defaultValue,\n      disabled,\n      ariaLabel,\n      optionsTestId,\n      error,\n    },\n    ref\n  ) => (\n    <StyledSelect\n      aria-label={ariaLabel}\n      className={className}\n      data-testid={testId}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      error={error}\n      filterOption={(input, option) =>\n        option?.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n      labelInValue\n      onChange={(selectedValue) => onChange?.(selectedValue as LabeledValue)}\n      placeholder={placeholder}\n      ref={ref}\n      showSearch={showSearch}\n      size={size}\n      style={{\n        borderColor: '#fff',\n      }}\n      /**\n       * To show placeholder correctly \"undefined\" value must be set.\n       * @see https://github.com/ant-design/ant-design/issues/16417#issuecomment-489177065\n       */\n      value={value || undefined}\n    >\n      {options.map((option) => (\n        <Select.Option\n          data-testid={optionsTestId}\n          error={error ? 1 : 0}\n          key={option.value}\n          value={option.value}\n        >\n          {option.label}\n        </Select.Option>\n      ))}\n    </StyledSelect>\n  )\n);\n\nexport {SelectOptionField};\n","import {Radio, RadioChangeEvent} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport {LabeledValue} from 'antd/lib/select';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst StyledRadio = styled(Radio)`\n  display: block;\n`;\ninterface RadioFieldProps {\n  onChange?: (event: RadioChangeEvent) => void;\n  value?: LabeledValue;\n  disabled?: boolean;\n  options: LabeledValue[];\n  className?: string;\n  testId?: string;\n  size?: SizeType;\n  ref?: React.ForwardedRef<HTMLDivElement>;\n  ariaLabel: string;\n}\n\nconst RadioField = forwardRef<HTMLDivElement, RadioFieldProps>(\n  (\n    {value, options, size, disabled, className, ariaLabel, testId, onChange},\n    ref\n  ) => (\n    <Radio.Group\n      aria-label={ariaLabel}\n      className={className}\n      disabled={disabled}\n      onChange={onChange}\n      ref={ref}\n      size={size}\n      value={value?.value}\n    >\n      {options.map((option) => (\n        <StyledRadio\n          data-testid={testId}\n          key={option.value}\n          value={option.value}\n        >\n          {option.label}\n        </StyledRadio>\n      ))}\n    </Radio.Group>\n  )\n);\n\nexport {RadioField};\n","import {Input} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport {TextAreaRef} from 'antd/lib/input/TextArea';\nimport React, {forwardRef} from 'react';\nimport styled from 'styled-components';\n\nconst {TextArea} = Input;\n\nconst StyledTextArea = styled(TextArea).withConfig({\n  shouldForwardProp: (prop) => !['error'].includes(prop),\n})<{error?: boolean}>((props) => {\n  const {error} = props;\n  const {red} = props.theme.colors;\n\n  return `\n    width: 100%;\n    ${error ? `border-color: ${red};` : ''}\n    .ant-input-number-handler-wrap {\n      display: none;\n    }\n`;\n});\n\ninterface TextareaFieldProps {\n  className?: string;\n  maxLength?: number;\n  name?: string;\n  onChange?: React.ChangeEventHandler<HTMLTextAreaElement>;\n  placeholder?: string;\n  size?: SizeType;\n  testId?: string;\n  value?: string | number;\n  ariaLabel: string;\n  error?: boolean;\n}\n\nconst TextareaField = forwardRef<TextAreaRef, TextareaFieldProps>(\n  (\n    {\n      className,\n      maxLength,\n      name,\n      onChange,\n      placeholder,\n      size,\n      testId,\n      value,\n      ariaLabel,\n      error,\n    },\n    ref\n  ) => (\n    <StyledTextArea\n      aria-label={ariaLabel}\n      className={className}\n      data-testid={testId}\n      error={error}\n      maxLength={maxLength}\n      name={name}\n      onChange={onChange}\n      placeholder={placeholder}\n      ref={ref}\n      showCount\n      size={size}\n      value={value}\n    />\n  )\n);\n\nexport {TextareaField};\n","import {Slider} from 'antd';\nimport {SliderRangeProps} from 'antd/lib/slider';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst AntdSlider = Slider as React.FC<\n  Omit<SliderRangeProps, 'range' | 'onChange' | 'value'> & {\n    onChange?: (value: number) => void;\n    value?: number;\n  }\n>;\n\nconst Container = styled.div`\n  position: relative;\n  padding: 0 3rem;\n  .anticon {\n    position: absolute;\n    top: -0.2rem;\n    width: 1.6rem;\n    height: 1.6rem;\n    color: rgba(0, 0, 0, 0.5);\n    &:first-child {\n      left: 0;\n    }\n    &:last-child {\n      right: 0;\n    }\n  }\n`;\n\ninterface SliderFieldProps {\n  value?: number;\n  min: number;\n  max: number;\n  onChange?: (value: number) => void;\n  className?: string;\n  testId?: string;\n  leftLabel?: React.ReactNode | string;\n  rightLabel?: React.ReactNode | string;\n  ariaLabel: string;\n}\n\nconst SliderField: React.FC<SliderFieldProps> = ({\n  value,\n  min,\n  max,\n  testId,\n  onChange,\n  rightLabel,\n  leftLabel,\n  className,\n  ariaLabel,\n}) => {\n  const hasSvgs =\n    typeof leftLabel === 'object' && typeof rightLabel === 'object'; // MEans they are components\n\n  return (\n    <Container data-testid={testId}>\n      {hasSvgs && leftLabel}\n      <AntdSlider\n        aria-label={ariaLabel}\n        aria-valuemax={max}\n        aria-valuemin={min}\n        aria-valuenow={value}\n        className={className}\n        marks={\n          !hasSvgs\n            ? {\n                [min]: {label: <strong>{leftLabel}</strong>},\n                [max]: {label: <strong>{rightLabel}</strong>},\n              }\n            : undefined\n        }\n        max={max}\n        min={min}\n        onChange={onChange}\n        value={value}\n      />\n      {hasSvgs && rightLabel}\n    </Container>\n  );\n};\n\nexport {SliderField};\n","import React from 'react';\nimport {Checkbox} from './Checkbox';\nimport {FormControl} from './FormControl';\nimport {InputField} from './InputField';\nimport {MultipleSelectOptionField} from './MultipleSelectOptionField';\nimport {PasswordField} from './PasswordField';\nimport {RadioField} from './RadioField';\nimport {SelectOptionField} from './SelectOptionField';\nimport {SliderField} from './SliderField';\nimport {TextareaField} from './TextareaField';\n\ninterface FormProps {\n  className?: string;\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n  testId?: string;\n}\n\nconst Form: React.FC<FormProps> = ({className, onSubmit, children, testId}) => (\n  <form className={className} data-testid={testId} onSubmit={onSubmit}>\n    {children}\n  </form>\n);\n\nexport {\n  Checkbox,\n  Form,\n  FormControl,\n  InputField,\n  MultipleSelectOptionField,\n  PasswordField,\n  RadioField,\n  SelectOptionField,\n  SliderField,\n  TextareaField,\n};\n","import Joi from 'joi';\n\ninterface EmailErrorMessages {\n  required?: string;\n  invalidEmail?: string;\n}\n\n/**\n * Joi email validation function.\n * To customize error messages, pass an object of type EmailErrorMessages; otherwise, default messages activated.\n * {\n *    required?: string;\n *    invalidEmail?: string;\n *    emptyEmail?: string;\n * }\n *\n * @param conf type of EmailErrorMessages\n * @returns\n */\nexport const requiredEmail = (conf?: EmailErrorMessages) =>\n  Joi.string()\n    .email({tlds: {allow: false}}) // Disable top level domain of email to prevent error validation.\n    .required()\n    .messages({\n      'string.email': conf?.invalidEmail || 'Invalid email',\n      'string.empty': conf?.required || 'Field required',\n    });\n","import Joi from 'joi';\n\ninterface PasswordErrorMessages {\n  required?: string;\n  invalidPassword?: string;\n}\n\n/**\n * Joi password validation function.\n * To customize error messages, pass an object of type PasswordErrorMessages; otherwise, default messages activated.\n * {\n *    required?: string;\n *    invalidPassword?: string;\n * }\n *\n * @param conf type of PasswordErrorMessages\n * @returns\n */\nexport const requiredPassword = (conf?: PasswordErrorMessages) =>\n  Joi.string()\n    .pattern(\n      /^(?=.*[\\d])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,255}$/\n    )\n    .required()\n    .messages({\n      'string.pattern.base':\n        conf?.invalidPassword || 'validationError.invalidPassword',\n      'any.required': conf?.required || 'Field required',\n      'string.empty': conf?.required || 'Field required',\n    });\n","import Joi from 'joi';\n\ninterface StringErrorMessages {\n  required?: string;\n}\n\n/**\n * Joi required string validation function.\n * To customize error messages, pass an object of type EmailErrorMessages; otherwise, default messages activated.\n * {\n *    required?: string;\n * }\n *\n * @param conf type of EmailErrorMessages\n * @returns\n */\nexport const requiredString = (conf?: StringErrorMessages) =>\n  Joi.string()\n    .required()\n    .messages({\n      'string.empty': conf?.required || 'Field required',\n      'string.base': conf?.required || 'Field required',\n      'any.required': conf?.required || 'Field required',\n    });\n","import Joi from 'joi';\n\ninterface StringErrorMessages {\n  required?: string;\n}\n\n/**\n * Joi required string validation function.\n * To customize error messages, pass an object of type EmailErrorMessages; otherwise, default messages activated.\n * {\n *    required?: string;\n * }\n *\n * @param conf type of EmailErrorMessages\n * @returns\n */\nexport const requiredNumber = (conf?: StringErrorMessages) =>\n  Joi.number()\n    .required()\n    .messages({\n      'any.required': conf?.required || 'Field required',\n    });\n","import {Joi, requiredEmail} from '../../../util/validations';\nimport {ForgotPasswordModel} from './models/ForgotPasswordModel';\n\nconst forgotPasswordSchema = Joi.object<ForgotPasswordModel>({\n  email: requiredEmail(),\n});\n\nexport default forgotPasswordSchema;\n","import DateExtension from '@joi/date';\nimport JoiBase from 'joi';\n\nconst Joi = JoiBase.extend(DateExtension);\n\ninterface StringErrorMessages {\n  required?: string;\n  invalidDate?: string;\n  invalidMaxDate?: string;\n}\n\n/**\n * Joi required string validation function.\n * To customize error messages, pass an object of type EmailErrorMessages; otherwise, default messages activated.\n * {\n *    required?: string;\n * }\n *+\n * @param conf type of EmailErrorMessages\n * @returns\n */\nexport const requiredDate = (dateFormat?: string, conf?: StringErrorMessages) =>\n  Joi.date()\n    .format(dateFormat)\n    .max('now')\n    .required()\n    .messages({\n      'date.base': conf?.invalidDate || 'validationError.invalidDate',\n      'date.max': conf?.invalidMaxDate || 'validationError.invalidMaxDate',\n      'string.empty': conf?.required || 'Field required',\n      'any.required': conf?.required || 'Field required',\n      'date.format': conf?.required || 'validationError.invalidDate',\n    });\n","/**\n * Styles shared for login, signup, reset password, forgot password screens.\n */\n\nimport {Row, Typography} from 'antd';\nimport styled from 'styled-components';\nimport devices from '../../styles/mediaQueries';\nimport Brand from '../Brand/Brand';\nimport LoadingButton from '../Buttons/LoadingButton';\nimport {Form} from '../Forms/Form';\nimport {mediumGathomFontStyle} from './sharedStyles';\n\nconst StyledRow = styled(Row)`\n  min-height: 100%;\n  @media ${devices.mdMediaQuery} {\n    background-color: transparent;\n  }\n`;\n\nconst OnboardingForm = styled(Form)`\n  border-radius: 1rem;\n`;\n\nconst FormTitle = styled(Typography.Title)`\n  ${mediumGathomFontStyle}\n\n  margin: 2rem 0;\n  margin-bottom: 2rem !important;\n`;\n\nconst FullWidthLoadingButton = styled(LoadingButton)`\n  width: 100%;\n  margin: 2rem 0;\n`;\n\nconst StyledBrand = styled(Brand)`\n  width: 20rem;\n`;\n\nexport {\n  StyledRow,\n  OnboardingForm,\n  StyledBrand,\n  FormTitle,\n  FullWidthLoadingButton,\n};\n","import {notification} from 'antd';\nimport {ArgsProps} from 'antd/lib/notification';\nimport {useCallback} from 'react';\n\nconst placement = 'bottomLeft';\n\nconst useToastMessage = () => {\n  const notifyError = useCallback((config: ArgsProps) => {\n    notification.error({\n      ...config,\n      placement,\n    });\n  }, []);\n\n  const notifySuccess = useCallback((config: ArgsProps) => {\n    notification.success({\n      ...config,\n      placement,\n    });\n  }, []);\n\n  const closeNotification = useCallback((key: string) => {\n    notification.close(key);\n  }, []);\n\n  return {notifyError, notifySuccess, closeNotification};\n};\n\nexport default useToastMessage;\n","import {MailOutlined} from '@ant-design/icons';\nimport {joiResolver} from '@hookform/resolvers/joi';\nimport {Card, Col, Row} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport LoadingButton from '../components/Buttons/LoadingButton';\n\nimport {FormControl, InputField} from '../components/Forms/Form';\nimport forgotPasswordSchema from '../components/Onboarding/ForgotPassword/forgotPasswordSchema';\nimport {ForgotPasswordModel} from '../components/Onboarding/ForgotPassword/models/ForgotPasswordModel';\nimport auth from '../components/Onboarding/util/auth';\nimport {\n  FormTitle,\n  OnboardingForm,\n  StyledBrand,\n  StyledRow,\n} from '../components/shared/onboardingStyles';\nimport useToastMessage from '../components/ToastMessage/hooks/toastMessageHook';\nimport NAVIGATION_ROUTES from '../config/NavigationRoutes';\nimport {callTryCatch} from '../util/callTryCatch';\n\n// const RedirectToSignupButton = styled(Button)`\n//   padding: 0;\n// `;\n\nconst FullWidthLoadingButton = styled(LoadingButton)`\n  width: 100%;\n  margin: 2rem 0;\n`;\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const {notifyError, notifySuccess} = useToastMessage();\n\n  const {\n    control,\n    formState: {errors},\n    handleSubmit,\n  } = useForm<ForgotPasswordModel>({\n    resolver: joiResolver(forgotPasswordSchema),\n    defaultValues: {\n      email: '',\n    },\n  });\n\n  const forgotPassword = useCallback(\n    async (formData: ForgotPasswordModel) => {\n      setLoading(true);\n      const [error] = await callTryCatch(async () =>\n        auth.forgotPassword({\n          email: formData.email,\n        })\n      );\n\n      setLoading(false);\n\n      if (error) {\n        // eslint-disable-next-line no-console\n        console.error('<Signup />', error);\n        notifyError({\n          message: 'Forgot password',\n          description: 'Email not found in our database',\n        });\n\n        return;\n      }\n\n      notifySuccess({\n        message: 'Forgot password',\n        description: 'We will help you retrieve you password.',\n      });\n    },\n    [notifyError, notifySuccess]\n  );\n\n  const emailError = errors.email?.message;\n\n  return (\n    <StyledRow align=\"middle\" justify=\"center\">\n      <Col lg={8} md={10} sm={12} xs={24}>\n        <OnboardingForm\n          onSubmit={handleSubmit(forgotPassword)}\n          testId=\"forgot-password-form\"\n        >\n          <Card>\n            <Row align=\"middle\" justify=\"center\">\n              <StyledBrand />\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormTitle level={5}>Forgot password</FormTitle>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormControl error={emailError} label=\"Email\">\n                  <Controller\n                    control={control}\n                    name=\"email\"\n                    render={({field: {onChange, value}}) => (\n                      <InputField\n                        ariaLabel=\"email\"\n                        error={!!emailError}\n                        name=\"email\"\n                        onChange={onChange}\n                        placeholder=\"Email\"\n                        prefixIcon={<MailOutlined />}\n                        size=\"large\"\n                        testId=\"email-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n\n            <Row justify=\"end\">\n              <Link to={NAVIGATION_ROUTES.login.path}>\n                Return back to login.\n              </Link>\n            </Row>\n\n            <Row>\n              <FullWidthLoadingButton\n                disabled={loading}\n                htmlType=\"submit\"\n                icon={<MailOutlined />}\n                loading={loading}\n                size=\"large\"\n                testId=\"forgot-password-submit-button\"\n              >\n                Submit\n              </FullWidthLoadingButton>\n            </Row>\n\n            <Row align=\"middle\" justify=\"center\">\n              <Link to={NAVIGATION_ROUTES.signup.path}>\n                Don&apos;t have account? register here.\n              </Link>\n            </Row>\n          </Card>\n        </OnboardingForm>\n      </Col>\n    </StyledRow>\n  );\n};\n\nexport default ForgotPassword;\n","import {Button} from 'antd';\nimport {ButtonType} from 'antd/lib/button';\nimport {ButtonHTMLType} from 'antd/lib/button/button';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport React from 'react';\nimport BoldLabel from '../shared/BoldLabel';\n\ninterface BaseButtonProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  type?: ButtonType;\n  bold?: boolean;\n  size?: SizeType;\n  className?: string;\n  icon?: React.ReactNode;\n  testId?: string;\n  disabled?: boolean;\n  htmlType?: ButtonHTMLType;\n}\n\nconst BaseButton: React.FC<BaseButtonProps> = ({\n  children,\n  type,\n  bold,\n  icon,\n  disabled,\n  onClick,\n  className,\n  size,\n  testId,\n  htmlType,\n}) => (\n  <Button\n    className={className}\n    data-testid={testId}\n    disabled={disabled}\n    htmlType={htmlType}\n    icon={icon}\n    onClick={onClick}\n    size={size}\n    type={type}\n  >\n    {!icon && bold ? <BoldLabel>{children}</BoldLabel> : <>{children}</>}\n  </Button>\n);\n\nexport default BaseButton;\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\nimport useToastMessage from '../../ToastMessage/hooks/toastMessageHook';\nimport {JobsWithTotalCountModel} from '../models/JobsWithTotalCountModel';\n\nconst useFetchJobs = () => {\n  const {notifyError} = useToastMessage();\n  const [data, setData] = useState<JobsWithTotalCountModel>();\n  const [error, setError] = useState<Error | undefined>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchJobs = useCallback(\n    async (searchParam: {\n      year: string;\n      location: string;\n      perPage: number;\n      page: number;\n      query: string;\n    }) => {\n      setLoading(true);\n      setError(undefined);\n\n      const [fetchError, response] = await callTryCatch(async () =>\n        httpClient.get<any, AxiosResponse<JobsWithTotalCountModel>>(\n          `${environment.domainApi}/jobs-scrap/api/v1/jobs?perPage=${searchParam.perPage}&page=${searchParam.page}` +\n            `&year=${searchParam.year}&location=${searchParam.location}&query=${searchParam.query}`\n        )\n      );\n\n      setLoading(false);\n\n      const jobStatistics = (\n        response as AxiosResponse<JobsWithTotalCountModel> | undefined\n      )?.data;\n\n      if (fetchError) {\n        // eslint-disable-next-line no-console\n        console.error('<FetchJobStatisticsHook>', fetchError);\n        setError(fetchError as Error);\n        notifyError({\n          message: 'Fetching error',\n          description:\n            'Oops! Something went wrong while fetching job statistics',\n        });\n\n        return null;\n      }\n\n      setData(jobStatistics);\n      return jobStatistics;\n    },\n    [setLoading, notifyError]\n  );\n\n  return {\n    loading,\n    data,\n    error,\n    fetchJobs,\n  };\n};\n\nexport default useFetchJobs;\n","import {Joi, requiredNumber, requiredString} from '../../util/validations';\nimport {JobSearchInput} from './models/JobSearchInput';\n\nconst jobSearchSchema = Joi.object<JobSearchInput>({\n  year: requiredNumber(),\n  perPage: requiredNumber(),\n  page: requiredNumber(),\n  query: requiredString(),\n  location: requiredString(),\n});\n\nexport default jobSearchSchema;\n","import {InfoCircleOutlined} from '@ant-design/icons';\nimport {Col, Popover, Row, Table, Typography} from 'antd';\nimport moment from 'moment';\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport styled from 'styled-components';\nimport BoldLabel from '../shared/BoldLabel';\nimport useViewport from '../WindowViewport/hooks/windowViewportHook';\nimport {JobScrapModel} from './models/JobScrapModel';\n\nconst {Link} = Typography;\n\nconst StyledRow = styled(Row)`\n  margin: 1rem 0;\n`;\n\nconst StyledInfoCircleOutlined = styled(InfoCircleOutlined)`\n  font-size: 2rem;\n`;\n\ninterface JobsTableProps {\n  jobs?: JobScrapModel[];\n  totalCount: number;\n  loading?: boolean;\n  onPagination: (page: number, perPage: number) => void;\n}\n\nconst JobsTable: React.FC<JobsTableProps> = ({\n  loading,\n  jobs,\n  totalCount,\n  onPagination,\n}) => {\n  const {isTabletOrLarger} = useViewport();\n  const [paginationConf, setPaginationConf] = useState({\n    pageSize: 25,\n    current: 1,\n    total: totalCount,\n  });\n\n  const columns = useMemo(() => {\n    if (isTabletOrLarger) {\n      return [\n        {\n          title: <BoldLabel>Company</BoldLabel>,\n          dataIndex: 'company',\n          key: 'company',\n          render: (_: string, row: JobScrapModel) => (\n            <Popover content={row.description} title=\"Description\">\n              <Link href={row.link} target=\"_blank\">\n                {row.company}\n              </Link>\n            </Popover>\n          ),\n        },\n        {\n          title: <BoldLabel>Industries</BoldLabel>,\n          dataIndex: 'industries',\n          key: 'industries',\n        },\n        {\n          title: <BoldLabel>Title</BoldLabel>,\n          dataIndex: 'title',\n          key: 'title',\n        },\n        {\n          title: <BoldLabel>Level</BoldLabel>,\n          dataIndex: 'senorityLevel',\n          key: 'senorityLevel',\n        },\n        {\n          title: <BoldLabel>Employment Type</BoldLabel>,\n          dataIndex: 'employmentType',\n          key: 'employmentType',\n        },\n        {\n          title: <BoldLabel>Job date</BoldLabel>,\n          dataIndex: 'jobDate',\n          key: 'jobDate',\n          render: (date: Date) => moment(date).format('MMM-yyyy'),\n        },\n      ];\n    }\n\n    return [\n      {\n        title: <BoldLabel>Job</BoldLabel>,\n        dataIndex: 'job',\n        key: 'job',\n        render: (_: string, row: JobScrapModel) => (\n          <Row>\n            <Col sm={10} xs={12}>\n              <BoldLabel>Company:</BoldLabel>\n            </Col>\n            <Col sm={14} xs={12}>\n              <Link href={row.link} target=\"_blank\">\n                {row.company}\n              </Link>\n            </Col>\n\n            <Col sm={10} xs={12}>\n              <BoldLabel>Industries:</BoldLabel>\n            </Col>\n            <Col sm={14} xs={12}>\n              {row.industries}\n            </Col>\n\n            <Col sm={10} xs={12}>\n              <BoldLabel>Level:</BoldLabel>\n            </Col>\n            <Col sm={14} xs={12}>\n              {row.senorityLevel}\n            </Col>\n\n            <Col sm={10} xs={12}>\n              <BoldLabel>Employment Type:</BoldLabel>\n            </Col>\n            <Col sm={14} xs={12}>\n              {row.employmentType}\n            </Col>\n\n            <Col sm={10} xs={12}>\n              <BoldLabel>Job date:</BoldLabel>\n            </Col>\n            <Col sm={14} xs={12}>\n              {moment(row.jobDate).format('MMM-yyyy')}\n            </Col>\n\n            <Col xs={24}>\n              <StyledRow>\n                <Col sm={10} xs={12}>\n                  <BoldLabel>Description:</BoldLabel>\n                </Col>\n                <Col sm={14} xs={12}>\n                  <Popover content={row.description} title=\"Description\">\n                    <StyledInfoCircleOutlined />\n                  </Popover>\n                </Col>\n              </StyledRow>\n            </Col>\n          </Row>\n        ),\n      },\n    ];\n  }, [isTabletOrLarger]);\n\n  const handleOnPageChange = useCallback(\n    (page: number) => {\n      setPaginationConf((oldSate) => ({\n        ...oldSate,\n        current: page,\n        total: totalCount,\n      }));\n      onPagination(page, paginationConf.pageSize);\n    },\n    [paginationConf, totalCount, onPagination, setPaginationConf]\n  );\n\n  useEffect(() => {\n    if (totalCount) {\n      setPaginationConf((oldSate) => ({\n        ...oldSate,\n        total: totalCount,\n      }));\n    }\n  }, [totalCount]);\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={jobs}\n      loading={loading}\n      pagination={{\n        ...paginationConf,\n        onChange: handleOnPageChange,\n        position: ['bottomCenter'],\n      }}\n      rowKey=\"id\"\n    />\n  );\n};\n\nexport default JobsTable;\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\nimport useToastMessage from '../../ToastMessage/hooks/toastMessageHook';\nimport {JobSearchLocationsModel} from '../models/JobSearchLocationsModel';\n\nconst useFetchJobSearchLocations = () => {\n  const {notifyError} = useToastMessage();\n  const [data, setData] = useState<JobSearchLocationsModel | undefined>();\n  const [error, setError] = useState<Error | undefined>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchJobSearchLocations = useCallback(async () => {\n    setLoading(true);\n    setError(undefined);\n\n    const [fetchError, response] = await callTryCatch(async () =>\n      httpClient.get<any, AxiosResponse<JobSearchLocationsModel>>(\n        `${environment.domainApi}/jobs-scrap/api/v1/job/locations`\n      )\n    );\n\n    setLoading(false);\n\n    const jobStatistics = (\n      response as AxiosResponse<JobSearchLocationsModel> | undefined\n    )?.data;\n\n    if (fetchError) {\n      // eslint-disable-next-line no-console\n      console.error('<FetchJobSearchLocationsHook>', fetchError);\n      setError(fetchError as Error);\n      notifyError({\n        message: 'Fetching error',\n        description:\n          'Oops! Something went wrong while fetching search settings',\n      });\n\n      return null;\n    }\n\n    setData(jobStatistics);\n    return jobStatistics;\n  }, [setLoading, notifyError]);\n\n  return {\n    loading,\n    data,\n    error,\n    fetchJobSearchLocations,\n  };\n};\n\nexport default useFetchJobSearchLocations;\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\nimport useToastMessage from '../../ToastMessage/hooks/toastMessageHook';\nimport {SearchSettingModel} from '../models/searchSettingModel';\n\nconst useFetchSearchSettings = () => {\n  const {notifyError} = useToastMessage();\n  const [data, setData] = useState<SearchSettingModel[]>();\n  const [error, setError] = useState<Error | undefined>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchSearchSettings = useCallback(async () => {\n    setLoading(true);\n    setError(undefined);\n\n    const [fetchError, response] = await callTryCatch(async () =>\n      httpClient.get<any, AxiosResponse<SearchSettingModel[]>>(\n        `${environment.domainApi}/jobs-scrap/api/v1/settings`\n      )\n    );\n\n    setLoading(false);\n\n    const jobStatistics = (\n      response as AxiosResponse<SearchSettingModel[]> | undefined\n    )?.data;\n\n    if (fetchError) {\n      // eslint-disable-next-line no-console\n      console.error('<FetchSearchSettingsHook>', fetchError);\n      setError(fetchError as Error);\n      notifyError({\n        message: 'Fetching error',\n        description:\n          'Oops! Something went wrong while fetching search settings',\n      });\n\n      return null;\n    }\n\n    setData(jobStatistics);\n    return jobStatistics;\n  }, [setLoading, notifyError]);\n\n  return {\n    loading,\n    data,\n    error,\n    fetchSearchSettings,\n  };\n};\n\nexport default useFetchSearchSettings;\n","import {joiResolver} from '@hookform/resolvers/joi';\nimport {Card, Col, DatePicker, Row, Typography} from 'antd';\nimport moment from 'moment';\nimport React, {useCallback, useEffect, useMemo} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport styled from 'styled-components';\nimport BaseButton from '../components/Buttons/BaseButton';\nimport {Form, FormControl, SelectOptionField} from '../components/Forms/Form';\nimport useFetchJobs from '../components/Jobs/hooks/fetchJobsHook';\nimport jobSearchSchema from '../components/Jobs/jobSearchSchema';\nimport JobsTable from '../components/Jobs/JobsTable';\nimport {JobSearchInput} from '../components/Jobs/models/JobSearchInput';\nimport useFetchJobSearchLocations from '../components/JobStatistics/hooks/fetchJobSearchLocationsHook';\nimport useFetchSearchSettings from '../components/JobStatistics/hooks/fetchSearchSettingsHook';\nimport BoldLabel from '../components/shared/BoldLabel';\nimport PagesContainer from '../components/shared/PagesContainer';\nimport devices from '../styles/mediaQueries';\n\nconst StyledBaseButton = styled(BaseButton)`\n  width: 100%;\n`;\n\nconst StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n`;\n\nconst Title = styled(Typography.Title)`\n  && {\n    font-size: 2.5rem;\n    @media ${devices.mdMediaQuery} {\n      font-size: 3rem;\n    }\n  }\n`;\n\nconst Jobs: React.FC = () => {\n  const {data, loading, fetchJobs} = useFetchJobs();\n  const jobSearchLocations = useFetchJobSearchLocations();\n  const searchSettingsQuery = useFetchSearchSettings();\n\n  const locationsOptions = useMemo(\n    () =>\n      jobSearchLocations.data?.locations.map((choice) => ({\n        label: choice,\n        value: choice,\n      })) || [],\n    [jobSearchLocations]\n  );\n\n  const jobQueries = useMemo(\n    () =>\n      searchSettingsQuery.data?.map((setting) => ({\n        label: setting.query,\n        value: setting.query,\n      })) || [],\n    [searchSettingsQuery]\n  );\n\n  const {\n    control,\n    formState: {errors},\n    handleSubmit,\n    getValues,\n  } = useForm<JobSearchInput>({\n    resolver: joiResolver(jobSearchSchema),\n    defaultValues: {\n      location: '',\n      query: '',\n      year: moment(new Date()).format('yyyy'),\n      page: 1,\n      perPage: 25,\n    },\n  });\n\n  const submit = useCallback(\n    (formData: JobSearchInput) => {\n      fetchJobs(formData);\n      //   fetchJobs({\n      //     perPage: 25,\n      //     page: 1,\n      //     year: '2021',\n      //     query: 'node.js',\n      //     location: 'australia',\n      //   });\n    },\n    [fetchJobs]\n  );\n\n  const handleOnPagination = useCallback(\n    (page: number, perPage: number) => {\n      const {location, query, year} = getValues();\n      fetchJobs({\n        location,\n        query,\n        year,\n        page,\n        perPage,\n      });\n    },\n    [fetchJobs, getValues]\n  );\n\n  useEffect(() => {\n    jobSearchLocations.fetchJobSearchLocations();\n    searchSettingsQuery.fetchSearchSettings();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //   const locationError = errors.location?.message;\n  const queryError = errors.query?.message;\n  const yearError = errors.year?.message;\n\n  return (\n    <PagesContainer\n      colLg={22}\n      headTitle={\n        <Row align=\"middle\" gutter={[16, 16]}>\n          <Col md={12} xs={17}>\n            <Title>Jobs</Title>\n          </Col>\n        </Row>\n      }\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col xs={24}>\n          <Card title={<BoldLabel>Search controls</BoldLabel>}>\n            <Form onSubmit={handleSubmit(submit)}>\n              <Row gutter={[16, 16]}>\n                <Col xs={8}>\n                  <FormControl label=\"Year\">\n                    <Controller\n                      control={control}\n                      name=\"year\"\n                      render={({field: {value, onChange}}) => (\n                        <StyledDatePicker\n                          onChange={(momentClass) =>\n                            onChange(momentClass?.format('yyyy') || '')\n                          }\n                          picker=\"year\"\n                          size=\"large\"\n                          value={moment(value, 'yyyy')}\n                        />\n                      )}\n                    />\n                  </FormControl>\n                </Col>\n\n                <Col xs={8}>\n                  <FormControl label=\"Location\">\n                    <Controller\n                      control={control}\n                      name=\"location\"\n                      render={({field: {value, onChange}}) => (\n                        <SelectOptionField\n                          ariaLabel=\"location query\"\n                          error={!!yearError}\n                          onChange={(currentLocation) =>\n                            onChange(currentLocation.value)\n                          }\n                          options={locationsOptions}\n                          optionsTestId=\"questionnaire-multiple-select-options\"\n                          size=\"large\"\n                          testId=\"questionnaire-multiple-select-field\"\n                          value={locationsOptions.find(\n                            (choice) => choice.value === value\n                          )}\n                        />\n                      )}\n                    />\n                  </FormControl>\n                </Col>\n\n                <Col xs={8}>\n                  <FormControl label=\"Job query\">\n                    <Controller\n                      control={control}\n                      name=\"query\"\n                      render={({field: {value, onChange}}) => (\n                        <SelectOptionField\n                          ariaLabel=\"job query\"\n                          error={!!queryError}\n                          onChange={(currentLocation) =>\n                            onChange(currentLocation.value)\n                          }\n                          options={jobQueries}\n                          optionsTestId=\"job-query-select-options\"\n                          size=\"large\"\n                          testId=\"job-query-select-field\"\n                          value={jobQueries.find(\n                            (choice) => choice.value === value\n                          )}\n                        />\n                      )}\n                    />\n                  </FormControl>\n                </Col>\n\n                <Col xs={24}>\n                  <StyledBaseButton htmlType=\"submit\" type=\"primary\">\n                    Search\n                  </StyledBaseButton>\n                </Col>\n              </Row>\n            </Form>\n          </Card>\n        </Col>\n\n        <Col xs={24}>\n          <JobsTable\n            jobs={data?.jobs}\n            loading={loading}\n            onPagination={handleOnPagination}\n            totalCount={data?.count || 0}\n          />\n        </Col>\n      </Row>\n    </PagesContainer>\n  );\n};\n\nexport default Jobs;\n","import {Result} from 'antd';\nimport {ResultStatusType} from 'antd/lib/result';\nimport React from 'react';\nimport BaseButton from '../Buttons/BaseButton';\nimport BoldLabel from '../shared/BoldLabel';\n\ninterface AsyncResultProps {\n  status?: ResultStatusType;\n  title?: string;\n  onActionButtonClick?: () => void;\n}\n\nconst AsyncResult: React.FC<AsyncResultProps> = ({\n  status,\n  title,\n  onActionButtonClick,\n}) => (\n  <Result\n    extra={\n      <BaseButton\n        onClick={onActionButtonClick}\n        testId=\"refetch-button\"\n        type=\"primary\"\n      >\n        <BoldLabel>Retry</BoldLabel>\n      </BaseButton>\n    }\n    status={status}\n    subTitle={<BoldLabel>Oops! Something went wrong!!</BoldLabel>}\n    title={title || status}\n  />\n);\n\nexport default AsyncResult;\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\nimport useToastMessage from '../../ToastMessage/hooks/toastMessageHook';\n\ninterface CountVisitorsModel {\n  totalVisits: number;\n}\n\nconst useFetchCountVisitors = () => {\n  const {notifyError} = useToastMessage();\n  const [data, setData] = useState<CountVisitorsModel>();\n  const [error, setError] = useState<Error | undefined>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchCountVisitors = useCallback(async () => {\n    setLoading(true);\n    setError(undefined);\n\n    const [fetchError, response] = await callTryCatch(async () =>\n      httpClient.get<any, AxiosResponse<CountVisitorsModel>>(\n        `${environment.domainApi}/jobs-scrap/api/v1/total-visits`\n      )\n    );\n\n    setLoading(false);\n\n    const countVisitors = (\n      response as AxiosResponse<CountVisitorsModel> | undefined\n    )?.data;\n\n    if (fetchError) {\n      // eslint-disable-next-line no-console\n      console.error('<FetchCountVisitorsHook>', fetchError);\n      setError(fetchError as Error);\n      notifyError({\n        message: 'Fetching error',\n        description: 'Oops! Something went wrong while fetching count visitors',\n      });\n\n      return null;\n    }\n\n    setData(countVisitors);\n    return countVisitors;\n  }, [setLoading, notifyError]);\n\n  return {\n    loading,\n    data,\n    error,\n    fetchCountVisitors,\n  };\n};\n\nexport default useFetchCountVisitors;\n","import {Badge} from 'antd';\nimport React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport BoldLabel from '../shared/BoldLabel';\nimport useFetchCountVisitors from './hooks/fetchCountVisitorsHook';\n\nconst StyledBadge = styled(Badge)`\n  margin-right: 0.5rem;\n  .ant-scroll-number-only {\n    font-weight: bold;\n  }\n`;\n\nconst CountVisitorsBadge: React.FC = () => {\n  const {data, fetchCountVisitors} = useFetchCountVisitors();\n\n  useEffect(() => {\n    fetchCountVisitors();\n  }, [fetchCountVisitors]);\n\n  return data ? (\n    <>\n      <StyledBadge\n        count={data.totalVisits}\n        overflowCount={9999999999999999999}\n      />\n      <BoldLabel>Visits</BoldLabel>\n    </>\n  ) : (\n    <></>\n  );\n};\n\nexport default CountVisitorsBadge;\n","import {\n  BarController,\n  BarElement,\n  CategoryScale,\n  Legend,\n  LinearScale,\n  TimeScale,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport {ReactChart} from 'chartjs-react';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {upperCaseWord} from '../../util/upperCaseWord';\nimport {JobStatisticsModel} from '../JobStatistics/models/JobStatisticsModel';\nimport {SearchSettingModel} from '../JobStatistics/models/searchSettingModel';\n\nReactChart.register(\n  zoomPlugin,\n  TimeScale,\n  Title,\n  Legend,\n  BarController,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n  Tooltip\n);\n\ninterface JobStatisticChartProps {\n  jobStatisticData?: JobStatisticsModel;\n  searchSettingsData: SearchSettingModel[];\n  year: string;\n}\n\nconst JobStatisticChart: React.FC<JobStatisticChartProps> = ({\n  jobStatisticData,\n  searchSettingsData,\n  year,\n}) => {\n  const [chartData, setChartData] = useState<any>();\n\n  const initChartConfig = useCallback(() => {\n    const dataSets: any[] = [];\n    const queries: string[] = jobStatisticData?.query.searchValues || [];\n    jobStatisticData?.query.searchValues.forEach((value) => {\n      const chartConfig = searchSettingsData.find(\n        (setting) => setting.query === value\n      )?.chartConfig;\n      dataSets.push({\n        label: value,\n        data: [],\n        backgroundColor: chartConfig?.backgroundColor || '',\n        borderColor: chartConfig?.borderColor || '',\n        borderWidth: 1,\n      });\n    });\n\n    let indexOfConfig: number;\n    jobStatisticData?.statistics.forEach((queryArray) => {\n      if (!queryArray.length) return;\n      const dataArray: number[] = Array(12).fill([0]);\n      queryArray.forEach((item) => {\n        const monthIndex = +item.jobDateAsYearMonth.split('-')[1];\n        indexOfConfig = queries.findIndex((value) => value === item.query);\n        dataArray[monthIndex - 1] = item.count;\n      });\n      dataSets[indexOfConfig].data = dataArray;\n    });\n\n    setChartData({\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sept',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      datasets: dataSets,\n    });\n  }, [jobStatisticData, searchSettingsData, setChartData]);\n\n  useEffect(() => {\n    initChartConfig();\n  }, [initChartConfig]);\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        height: '600px',\n        width: '100%',\n      }}\n    >\n      <ReactChart\n        data={chartData}\n        options={{\n          maintainAspectRatio: false,\n          responsive: true,\n          plugins: {\n            title: {\n              display: true,\n              text: `Jobs per month statistics for ${year} in area (${upperCaseWord(\n                jobStatisticData?.query.location || ''\n              )})`,\n            },\n            zoom: {\n              pan: {\n                enabled: true,\n                mode: 'x',\n              },\n              zoom: {\n                wheel: {\n                  enabled: true,\n                },\n                pinch: {\n                  enabled: true,\n                },\n                mode: 'x',\n              },\n            },\n          },\n        }}\n        type=\"bar\"\n      />\n    </div>\n  );\n};\n\nexport default JobStatisticChart;\n","const upperCaseWord = (value: string) =>\n  `${value.charAt(0).toUpperCase()}${value.substr(1)}`;\n\nexport {upperCaseWord};\n","import {AxiosResponse} from 'axios';\nimport {useCallback, useState} from 'react';\nimport environment from '../../../config/environment';\nimport {callTryCatch} from '../../../util/callTryCatch';\nimport {httpClient} from '../../../util/httpClient';\nimport useToastMessage from '../../ToastMessage/hooks/toastMessageHook';\nimport {JobStatisticsModel} from '../models/JobStatisticsModel';\n\nconst useFetchJobStatistics = () => {\n  const {notifyError} = useToastMessage();\n  const [data, setData] = useState<JobStatisticsModel | undefined>();\n  const [error, setError] = useState<Error | undefined>();\n  const [loading, setLoading] = useState(false);\n\n  const fetchJobStatistics = useCallback(\n    async (searchParam: {year: string; location: string}) => {\n      setLoading(true);\n      setError(undefined);\n\n      const [fetchError, response] = await callTryCatch(async () =>\n        httpClient.get<any, AxiosResponse<JobStatisticsModel>>(\n          `${environment.domainApi}/jobs-scrap/api/v1/statistics?year=${searchParam.year}&location=${searchParam.location}`\n        )\n      );\n\n      setLoading(false);\n\n      const jobStatistics = (\n        response as AxiosResponse<JobStatisticsModel> | undefined\n      )?.data;\n\n      if (fetchError) {\n        // eslint-disable-next-line no-console\n        console.error('<FetchJobStatisticsHook>', fetchError);\n        setError(fetchError as Error);\n        notifyError({\n          message: 'Fetching error',\n          description:\n            'Oops! Something went wrong while fetching job statistics',\n        });\n\n        return null;\n      }\n\n      setData(jobStatistics);\n      return jobStatistics;\n    },\n    [setLoading, notifyError]\n  );\n\n  return {\n    loading,\n    data,\n    error,\n    fetchJobStatistics,\n  };\n};\n\nexport default useFetchJobStatistics;\n","import {Spin} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 30px 50px;\n  margin: 20px 0;\n  margin-bottom: 20px;\n  text-align: center;\n  border-radius: 4px;\n`;\n\nconst ContentLoading: React.FC = () => (\n  <Container data-testid=\"loading-content\">\n    <Spin size=\"large\" />\n  </Container>\n);\n\nexport default ContentLoading;\n","import {VectorMap} from '@south-paw/react-vector-maps';\nimport {getAlpha2Code, registerLocale} from 'i18n-iso-countries';\nimport countriesEnJson from 'i18n-iso-countries/langs/en.json';\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport worldMap from './world.json';\n\nregisterLocale(countriesEnJson);\n\nconst MapContainer = styled.div.withConfig({\n  shouldForwardProp: (prop) =>\n    !['locationsAlphaCods', 'selectedCountryAsAlphaCode'].includes(prop),\n})<{locationsAlphaCods: string[]; selectedCountryAsAlphaCode?: string}>(\n  (props) => {\n    const {locationsAlphaCods, selectedCountryAsAlphaCode} = props;\n\n    return `\n    svg {\n      stroke: #fff;\n  \n      // All layers are just path elements\n      path {\n        fill: gray;\n        cursor: pointer;\n        outline: none;\n  \n        // When a layer is hovered\n        &:hover {\n          fill: rgba(168, 43, 43, 0.83);\n        }\n  \n        // When a layer is focused.\n        &:focus {\n          fill: rgba(168, 43, 43, 0.6);\n        }\n  \n        // When a layer is 'checked' (via checkedLayers prop).\n        &[aria-checked='true'] {\n          fill: rgba(56, 43, 168, 1);\n        }\n  \n        // When a layer is 'selected' (via currentLayers prop).\n        &[aria-current='true'] {\n          fill: rgba(56, 43, 168, 0.83);\n        }\n  \n        // You can also highlight a specific layer via it's id\n        ${locationsAlphaCods\n          .map(\n            (alphaCode) => `\n            // When a layer is hovered\n            &:hover {\n              fill: rgba(168, 43, 43, 0.83);\n            }\n      \n            // When a layer is focused.\n            &:focus {\n              fill: rgba(168, 43, 43, 0.6);\n            }\n \n\n            // Color countries that has statistics data\n            &[id='${alphaCode}'] {\n                fill: rgba(4, 124, 179, 0.6);\n                &:hover {\n                  fill: rgba(168, 43, 43, 0.6);\n                }\n                &:focus {\n                  fill: rgba(168, 43, 43, 0.83);\n                }\n              }\n        \n            // Default selected country styled\n            ${\n              selectedCountryAsAlphaCode === alphaCode\n                ? `\n                      &[id='${selectedCountryAsAlphaCode}'] {\n                          fill: rgba(168, 43, 43, 0.83);\n                      }\n                  `\n                : ''\n            }\n            `\n          )\n          .join('\\n')}\n        \n      }\n    }\n  `;\n  }\n);\n\ninterface WorldVectorMapProps {\n  locations?: string[];\n  selectedCountryName: string | null;\n  onAreaClick?: (countryName: string) => void;\n}\n\nconst WorldVectorMap: React.FC<WorldVectorMapProps> = ({\n  locations,\n  selectedCountryName,\n  onAreaClick,\n}) => {\n  const locationsAlphaCods = useMemo(\n    () =>\n      locations?.map((location) =>\n        getAlpha2Code(location || '', 'en')?.toLowerCase()\n      ) || [],\n    [locations]\n  );\n\n  const handleOnClick = useCallback(\n    ({target}: any) => {\n      const countryName = target.attributes.name.value.toLowerCase();\n      if (locations?.includes(countryName)) onAreaClick?.(countryName);\n    },\n    [locations, onAreaClick]\n  );\n\n  return (\n    <MapContainer\n      locationsAlphaCods={locationsAlphaCods}\n      selectedCountryAsAlphaCode={getAlpha2Code(\n        selectedCountryName || '',\n        'en'\n      )?.toLowerCase()}\n    >\n      <VectorMap {...worldMap} layerProps={{onClick: handleOnClick}} />\n    </MapContainer>\n  );\n};\n\nexport default WorldVectorMap;\n","import Joi from 'joi';\n\nexport const confirmPasswordWith = (\n  fieldName: string,\n  conf?: {passwordNotMatch?: string}\n) =>\n  Joi.any()\n    .valid(Joi.ref(fieldName))\n    .required()\n    .messages({\n      'any.only': conf?.passwordNotMatch || 'validationError.passwordsNotMatch',\n    });\n","import {Alert, Card, Col, DatePicker, Row, Typography} from 'antd';\nimport {LabeledValue} from 'antd/lib/select';\nimport moment, {Moment} from 'moment';\nimport React, {useCallback, useEffect, useMemo} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport styled from 'styled-components';\nimport AsyncResult from '../components/AsyncResult/AsyncResult';\nimport CountVisitorsBadge from '../components/CountVisitorsBadg/CountVisitorsBadge';\nimport {FormControl, SelectOptionField} from '../components/Forms/Form';\nimport JobStatisticChart from '../components/JobStatisticChart/JobStatisticChart';\nimport useFetchJobSearchLocations from '../components/JobStatistics/hooks/fetchJobSearchLocationsHook';\nimport useFetchJobStatistics from '../components/JobStatistics/hooks/fetchJobsStatisticsHook';\nimport useFetchSearchSettings from '../components/JobStatistics/hooks/fetchSearchSettingsHook';\nimport ContentLoading from '../components/Loading/ContentLoading';\nimport BoldLabel from '../components/shared/BoldLabel';\nimport PagesContainer from '../components/shared/PagesContainer';\nimport WorldVectorMap from '../components/WorldVectorMap/WorldVectorMap';\nimport NAVIGATION_ROUTES from '../config/NavigationRoutes';\nimport devices from '../styles/mediaQueries';\n\nconst Title = styled(Typography.Title)`\n  && {\n    font-size: 2.5rem;\n    @media ${devices.mdMediaQuery} {\n      font-size: 3rem;\n    }\n  }\n`;\n\nconst StyledDatePicker = styled(DatePicker)`\n  width: 100%;\n`;\n\nconst scrollDown = () =>\n  window.scrollTo({top: document.body.scrollHeight, behavior: 'smooth'});\n\nconst JobStatistics: React.FC = () => {\n  const history = useHistory();\n  const query = new URLSearchParams(useLocation().search);\n  const location = query.get('location');\n  const year = query.get('year') || moment(new Date()).format('yyyy');\n\n  const jobStatisticQuery = useFetchJobStatistics();\n  const searchSettingsQuery = useFetchSearchSettings();\n  const jobSearchLocations = useFetchJobSearchLocations();\n\n  const locationsOptions = useMemo(\n    () =>\n      jobSearchLocations.data?.locations?.map((choice) => ({\n        label: choice,\n        value: choice,\n      })) || [],\n    [jobSearchLocations]\n  );\n\n  const handleOnYearChange = useCallback(\n    (value: Moment | null) => {\n      history.push(\n        `${\n          NAVIGATION_ROUTES.statistics.path\n        }?location=${location}&year=${value?.format('yyyy')}`\n      );\n    },\n    [location, history]\n  );\n\n  const handleOnSelectChange = useCallback(\n    (selectedLocation: LabeledValue) => {\n      history.push(\n        `${NAVIGATION_ROUTES.statistics.path}?location=${selectedLocation.value}&year=${year}`\n      );\n      scrollDown();\n    },\n    [history, year]\n  );\n\n  const handleOnAreaClick = useCallback(\n    (countryName: string) => {\n      history.push(\n        `${NAVIGATION_ROUTES.statistics.path}?location=${countryName}&year=${year}`\n      );\n      scrollDown();\n    },\n    [history, year]\n  );\n\n  useEffect(() => {\n    if (location && year) {\n      jobStatisticQuery.fetchJobStatistics({year, location});\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location, year]);\n\n  useEffect(() => {\n    searchSettingsQuery.fetchSearchSettings();\n    jobSearchLocations.fetchJobSearchLocations();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (jobStatisticQuery.error || searchSettingsQuery.error)\n    return (\n      <AsyncResult\n        onActionButtonClick={() => {\n          if (location && year) {\n            jobStatisticQuery.fetchJobStatistics({year, location});\n            searchSettingsQuery.fetchSearchSettings();\n          }\n        }}\n        status={500}\n      />\n    );\n\n  return (\n    <PagesContainer\n      headTitle={\n        <Row align=\"middle\" gutter={[16, 16]}>\n          <Col md={12} xs={17}>\n            <Title>Jobs scrap statistic</Title>\n          </Col>\n\n          <Col md={12} xs={7}>\n            <Row justify=\"end\">\n              <CountVisitorsBadge />\n            </Row>\n          </Col>\n        </Row>\n      }\n    >\n      <Row align=\"middle\" gutter={[16, 16]}>\n        <Col xs={24}>\n          <Card title={<BoldLabel>Statistic controls</BoldLabel>}>\n            <Row gutter={[16, 16]}>\n              <Col xs={24}>\n                <Alert\n                  closable\n                  description={\n                    <>\n                      <BoldLabel>Location</BoldLabel> can be selected from\n                      dropdown list bellow 👇 or directly by clicking on the{' '}\n                      <BoldLabel>blue</BoldLabel> area on map. Statistics are\n                      interactive.\n                      <br />\n                      Hover on bars to check more precise information for each\n                      category. You can also toggle bars by clicking on the\n                      category rectangle (top of the statistics)\n                    </>\n                  }\n                  message=\"How to use\"\n                  showIcon\n                  type=\"info\"\n                />\n              </Col>\n              <Col xs={12}>\n                <FormControl label=\"Year\">\n                  <StyledDatePicker\n                    onChange={handleOnYearChange}\n                    picker=\"year\"\n                    size=\"large\"\n                    value={moment(year, 'yyyy')}\n                  />\n                </FormControl>\n              </Col>\n\n              <Col xs={12}>\n                <FormControl label=\"Location\">\n                  <SelectOptionField\n                    ariaLabel=\"search queries\"\n                    error={!location}\n                    onChange={(currentLocation) =>\n                      handleOnSelectChange(currentLocation)\n                    }\n                    options={locationsOptions}\n                    optionsTestId=\"questionnaire-multiple-select-options\"\n                    size=\"large\"\n                    testId=\"questionnaire-multiple-select-field\"\n                    value={locationsOptions.find(\n                      (choice) => choice.value === location\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n\n            <Row gutter={[16, 16]} justify=\"center\">\n              <Col md={18} xl={13} xs={24}>\n                <WorldVectorMap\n                  locations={jobSearchLocations.data?.locations}\n                  onAreaClick={handleOnAreaClick}\n                  selectedCountryName={location}\n                />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n\n        <Col xs={24}>\n          {location && year && (\n            <Card title={<BoldLabel>Job statistics</BoldLabel>}>\n              {jobStatisticQuery.loading || searchSettingsQuery.loading ? (\n                <ContentLoading />\n              ) : (\n                jobStatisticQuery.data &&\n                searchSettingsQuery.data && (\n                  <JobStatisticChart\n                    jobStatisticData={jobStatisticQuery.data}\n                    searchSettingsData={searchSettingsQuery.data}\n                    year={year}\n                  />\n                )\n              )}\n            </Card>\n          )}\n        </Col>\n      </Row>\n    </PagesContainer>\n  );\n};\n\nexport default JobStatistics;\n","import {useCallback} from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport NAVIGATION_ROUTES from '../../../config/NavigationRoutes';\n\nconst useNavigateToDashboard = () => {\n  const history = useHistory();\n\n  const goToDashboard = useCallback(() => {\n    history.push(NAVIGATION_ROUTES.dashboard.path);\n  }, [history]);\n\n  return {goToDashboard};\n};\n\nexport default useNavigateToDashboard;\n","import {Joi, requiredEmail, requiredPassword} from '../../../util/validations';\nimport {LoginInput} from './models/LoginInput';\n\nconst loginSchema = Joi.object<LoginInput>({\n  email: requiredEmail(),\n  password: requiredPassword(),\n});\n\nexport default loginSchema;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// color: ${(props) => props.theme.colors.red};\nconst List = styled.ul`\n  padding: 1.5rem;\n  margin: 0;\n`;\n\nconst Item = styled.li`\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.red};\n`;\n\nconst PasswordHints: React.FC = () => (\n  <List data-testid=\"password-hints\">\n    <Item>1 character</Item>\n    <Item>1 number</Item>\n    <Item>with no space</Item>\n    <Item>8 characters minimum long</Item>\n  </List>\n);\n\nexport default PasswordHints;\n","import {KeyOutlined, LoginOutlined, UserOutlined} from '@ant-design/icons';\nimport {joiResolver} from '@hookform/resolvers/joi';\nimport {Card, Col, Row, Typography} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport useNavigateToDashboard from '../components/Dashboard/hooks/navigateToDashboardHook';\nimport {FormControl, InputField, PasswordField} from '../components/Forms/Form';\nimport loginSchema from '../components/Onboarding/Login/loginSchema';\nimport {LoginInput} from '../components/Onboarding/Login/models/LoginInput';\nimport PasswordHints from '../components/Onboarding/PasswordHints';\nimport auth from '../components/Onboarding/util/auth';\nimport {\n  FullWidthLoadingButton,\n  OnboardingForm,\n  StyledBrand,\n  StyledRow,\n} from '../components/shared/onboardingStyles';\nimport {mediumGathomFontStyle} from '../components/shared/sharedStyles';\nimport useToastMessage from '../components/ToastMessage/hooks/toastMessageHook';\nimport NAVIGATION_ROUTES from '../config/NavigationRoutes';\nimport {callTryCatch} from '../util/callTryCatch';\n\nconst LoginTitle = styled(Typography.Title)`\n  ${mediumGathomFontStyle}\n  margin: 2rem 0;\n  margin-bottom: 2rem !important;\n`;\n\nconst Login: React.FC = () => {\n  const {goToDashboard} = useNavigateToDashboard();\n  const {notifyError} = useToastMessage();\n  const [loading, setLoading] = useState(false);\n\n  const login = useCallback(\n    async (formData: LoginInput) => {\n      setLoading(true);\n      const [error] = await callTryCatch(async () =>\n        auth.login({\n          password: formData.password,\n          username: formData.email,\n        })\n      );\n\n      setLoading(false);\n\n      if (error) {\n        // eslint-disable-next-line no-console\n        console.error('<Login />', error);\n        notifyError({\n          message: 'Login failed',\n          description: 'Invalid username or password. Please try again later',\n        });\n\n        return;\n      }\n\n      goToDashboard();\n    },\n    [goToDashboard, setLoading, notifyError]\n  );\n\n  const {\n    control,\n    formState: {errors},\n    handleSubmit,\n  } = useForm<LoginInput>({\n    resolver: joiResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const emailError = errors.email?.message;\n  const passwordError = errors.password?.message;\n\n  return (\n    <StyledRow align=\"middle\" justify=\"center\">\n      <Col lg={6} md={10} sm={12} xs={24}>\n        <OnboardingForm onSubmit={handleSubmit(login)} testId=\"login-form\">\n          <Card>\n            <Row align=\"middle\" justify=\"center\">\n              <StyledBrand />\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <LoginTitle level={5}>Login</LoginTitle>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormControl error={emailError} label=\"Email\">\n                  <Controller\n                    control={control}\n                    name=\"email\"\n                    render={({field: {value, onChange}}) => (\n                      <InputField\n                        ariaLabel=\"email\"\n                        error={!!emailError}\n                        name=\"email\"\n                        onChange={onChange}\n                        placeholder=\"Email\"\n                        prefixIcon={<UserOutlined />}\n                        size=\"large\"\n                        testId=\"email-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n\n              <Col xs={24}>\n                <FormControl error={passwordError} label=\"Password\">\n                  <Controller\n                    control={control}\n                    name=\"password\"\n                    render={({field: {value, onChange}}) => (\n                      <PasswordField\n                        ariaLabel=\"password\"\n                        error={!!passwordError}\n                        name=\"password\"\n                        onChange={onChange}\n                        placeholder=\"Password\"\n                        prefixIcon={<KeyOutlined />}\n                        size=\"large\"\n                        testId=\"password-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n\n                <Col xs={24}>\n                  {errors.password?.message && <PasswordHints />}\n                </Col>\n              </Col>\n            </Row>\n\n            <Row justify=\"end\">\n              <Link to={NAVIGATION_ROUTES.forgotPassword.path}>\n                Forgot password?\n              </Link>\n            </Row>\n\n            <Row>\n              <FullWidthLoadingButton\n                disabled={loading}\n                htmlType=\"submit\"\n                icon={<LoginOutlined />}\n                loading={loading}\n                size=\"large\"\n                testId=\"login-action-button\"\n              >\n                Login\n              </FullWidthLoadingButton>\n            </Row>\n\n            <Row align=\"middle\" justify=\"center\">\n              <Link to={NAVIGATION_ROUTES.signup.path}>\n                Register new account.\n              </Link>\n            </Row>\n          </Card>\n        </OnboardingForm>\n      </Col>\n    </StyledRow>\n  );\n};\n\nexport default Login;\n","import {\n  confirmPasswordWith,\n  Joi,\n  requiredPassword,\n} from '../../../util/validations';\nimport {ResetPasswordModel} from './models/ResetPasswordModel';\n\nconst resetPasswordSchema = Joi.object<ResetPasswordModel>({\n  newPassword: requiredPassword(),\n  confirmPassword: confirmPasswordWith('newPassword'),\n});\n\nexport default resetPasswordSchema;\n","import {KeyOutlined, LoginOutlined} from '@ant-design/icons';\nimport {joiResolver} from '@hookform/resolvers/joi';\nimport {Card, Col, Row} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\n\nimport {Link, useParams} from 'react-router-dom';\nimport {FormControl, PasswordField} from '../components/Forms/Form';\nimport useNavigateToLogin from '../components/Onboarding/Login/hooks/navigateToLoginHook';\nimport PasswordHints from '../components/Onboarding/PasswordHints';\nimport {ResetPasswordModel} from '../components/Onboarding/ResetPassword/models/ResetPasswordModel';\nimport resetPasswordSchema from '../components/Onboarding/ResetPassword/resetPasswordSchema';\nimport auth from '../components/Onboarding/util/auth';\nimport {\n  FormTitle,\n  FullWidthLoadingButton,\n  OnboardingForm,\n  StyledBrand,\n  StyledRow,\n} from '../components/shared/onboardingStyles';\nimport useToastMessage from '../components/ToastMessage/hooks/toastMessageHook';\nimport NAVIGATION_ROUTES from '../config/NavigationRoutes';\nimport {callTryCatch} from '../util/callTryCatch';\n\ntype VerificationUserInput = {\n  userId: string;\n  verificationId: string;\n};\n\nconst ResetPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const {notifyError, notifySuccess} = useToastMessage();\n  const params = useParams<VerificationUserInput>();\n  const {goToLogin} = useNavigateToLogin();\n\n  const {\n    control,\n    handleSubmit,\n    formState: {errors},\n  } = useForm<ResetPasswordModel>({\n    resolver: joiResolver(resetPasswordSchema),\n    defaultValues: {\n      newPassword: '',\n      confirmPassword: '',\n    },\n  });\n\n  const resetPassword = useCallback(\n    async (formData: ResetPasswordModel) => {\n      setLoading(true);\n      const [error] = await callTryCatch(async () =>\n        auth.resetPassword({\n          newPassword: formData.newPassword,\n          userId: params.userId,\n          verificationId: params.verificationId,\n        })\n      );\n\n      setLoading(false);\n\n      if (error) {\n        // eslint-disable-next-line no-console\n        console.error('<ResetPassword />', error);\n        notifyError({\n          message: 'Reset password failed',\n          description: 'Oops! Something went wrong while resetting password',\n        });\n\n        return;\n      }\n\n      notifySuccess({\n        message: 'Password reset',\n        description: 'Great! you password has been reset',\n      });\n      goToLogin();\n    },\n    [params, notifyError, notifySuccess, goToLogin]\n  );\n\n  const newPasswordError = errors.newPassword?.message;\n  const confirmPasswordError = errors.confirmPassword?.message;\n\n  return (\n    <StyledRow align=\"middle\" justify=\"center\">\n      <Col lg={8} md={10} sm={12} xs={24}>\n        <OnboardingForm\n          onSubmit={handleSubmit(resetPassword)}\n          testId=\"reset-password-form\"\n        >\n          <Card>\n            <Row align=\"middle\" justify=\"center\">\n              <StyledBrand />\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormTitle level={5}>Reset password</FormTitle>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormControl error={newPasswordError} label=\"Reset password\">\n                  <Controller\n                    control={control}\n                    name=\"newPassword\"\n                    render={({field: {value, onChange}}) => (\n                      <PasswordField\n                        ariaLabel=\"new password\"\n                        error={!!newPasswordError}\n                        name=\"newPassword\"\n                        onChange={onChange}\n                        placeholder=\"New password\"\n                        prefixIcon={<KeyOutlined />}\n                        size=\"large\"\n                        testId=\"new-password-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormControl\n                  error={confirmPasswordError}\n                  label=\"Confirm password\"\n                >\n                  <Controller\n                    control={control}\n                    name=\"confirmPassword\"\n                    render={({field: {value, onChange}}) => (\n                      <PasswordField\n                        ariaLabel=\"confirm password\"\n                        error={!!confirmPasswordError}\n                        name=\"confirmPassword\"\n                        onChange={onChange}\n                        placeholder=\"Confirm password\"\n                        prefixIcon={<KeyOutlined />}\n                        size=\"large\"\n                        testId=\"confirm-password-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n\n            <Col xs={24}>\n              {errors.newPassword?.message && <PasswordHints />}\n            </Col>\n\n            <Row justify=\"end\">\n              <Link to={NAVIGATION_ROUTES.login.path}>Return to login</Link>\n            </Row>\n\n            <Row>\n              <FullWidthLoadingButton\n                disabled={loading}\n                htmlType=\"submit\"\n                icon={<LoginOutlined />}\n                loading={loading}\n                size=\"large\"\n              >\n                Reset\n              </FullWidthLoadingButton>\n            </Row>\n\n            <Row align=\"middle\" justify=\"center\">\n              <Link to={NAVIGATION_ROUTES.signup.path}>\n                Don&apos;t have account?\n              </Link>\n            </Row>\n          </Card>\n        </OnboardingForm>\n      </Col>\n    </StyledRow>\n  );\n};\n\nexport default ResetPassword;\n","import {\n  Joi,\n  requiredEmail,\n  requiredPassword,\n  requiredString,\n} from '../../../util/validations';\nimport {SignupModel} from './models/SignupModel';\n\nconst signupSchema = Joi.object<SignupModel>({\n  firstName: requiredString(),\n  lastName: requiredString(),\n  email: requiredEmail(),\n  password: requiredPassword(),\n});\n\nexport default signupSchema;\n","import {KeyOutlined, LoginOutlined, UserOutlined} from '@ant-design/icons';\nimport {joiResolver} from '@hookform/resolvers/joi';\nimport {Card, Col, Row} from 'antd';\n\nimport React, {useCallback, useState} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport {FormControl, InputField, PasswordField} from '../components/Forms/Form';\nimport useNavigateToLogin from '../components/Onboarding/Login/hooks/navigateToLoginHook';\nimport PasswordHints from '../components/Onboarding/PasswordHints';\nimport {SignupModel} from '../components/Onboarding/Signup/models/SignupModel';\nimport signupSchema from '../components/Onboarding/Signup/signupSchema';\nimport auth from '../components/Onboarding/util/auth';\nimport {\n  FormTitle,\n  FullWidthLoadingButton,\n  OnboardingForm,\n  StyledBrand,\n  StyledRow,\n} from '../components/shared/onboardingStyles';\nimport useToastMessage from '../components/ToastMessage/hooks/toastMessageHook';\nimport NAVIGATION_ROUTES from '../config/NavigationRoutes';\nimport {callTryCatch} from '../util/callTryCatch';\n\nconst Signup: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const {goToLogin} = useNavigateToLogin();\n  const {notifyError, notifySuccess} = useToastMessage();\n\n  const {\n    control,\n    formState: {errors},\n    handleSubmit,\n  } = useForm<SignupModel>({\n    resolver: joiResolver(signupSchema),\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const signup = useCallback(\n    async (formData: SignupModel) => {\n      setLoading(true);\n      const [error] = await callTryCatch(async () =>\n        auth.signup({\n          password: formData.password,\n          email: formData.email,\n          name: {\n            first: formData.firstName,\n            last: formData.lastName,\n          },\n        })\n      );\n\n      setLoading(false);\n\n      if (error) {\n        // eslint-disable-next-line no-console\n        console.error('<Signup />', error);\n        notifyError({\n          message: 'Signup failed',\n          description: 'Oops! Something went wrong while signing up',\n        });\n\n        return;\n      }\n\n      notifySuccess({\n        message: 'Signup success',\n        description:\n          'Great! You will receive an email, follow instruction to verify your account',\n      });\n      goToLogin();\n    },\n    [notifyError, setLoading, notifySuccess, goToLogin]\n  );\n\n  const firstNameError = errors.firstName?.message;\n  const lastNameError = errors.lastName?.message;\n  const emailError = errors.email?.message;\n  const passwordError = errors.password?.message;\n\n  return (\n    <StyledRow align=\"middle\" justify=\"center\">\n      <Col lg={6} md={10} sm={12} xs={24}>\n        <OnboardingForm onSubmit={handleSubmit(signup)} testId=\"login-form\">\n          <Card>\n            <Row align=\"middle\" justify=\"center\">\n              <StyledBrand />\n            </Row>\n\n            <Row>\n              <Col xs={24}>\n                <FormTitle level={5}>Login</FormTitle>\n              </Col>\n            </Row>\n\n            <Row gutter={[16, 16]}>\n              <Col xs={24}>\n                <FormControl error={firstNameError} label=\"First name\">\n                  <Controller\n                    control={control}\n                    name=\"firstName\"\n                    render={({field: {value, onChange}}) => (\n                      <InputField\n                        ariaLabel=\"first name\"\n                        error={!!firstNameError}\n                        name=\"firstName\"\n                        onChange={onChange}\n                        placeholder=\"First name\"\n                        prefixIcon={<UserOutlined />}\n                        size=\"large\"\n                        testId=\"first-name-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n\n              <Col xs={24}>\n                <FormControl error={lastNameError} label=\"Last name\">\n                  <Controller\n                    control={control}\n                    name=\"lastName\"\n                    render={({field: {value, onChange}}) => (\n                      <InputField\n                        ariaLabel=\"last name\"\n                        error={!!lastNameError}\n                        name=\"lastName\"\n                        onChange={onChange}\n                        placeholder=\"Last name\"\n                        prefixIcon={<UserOutlined />}\n                        size=\"large\"\n                        testId=\"last-name-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n\n              <Col xs={24}>\n                <FormControl error={emailError} label=\"Email\">\n                  <Controller\n                    control={control}\n                    name=\"email\"\n                    render={({field: {value, onChange}}) => (\n                      <InputField\n                        ariaLabel=\"email\"\n                        error={!!emailError}\n                        name=\"email\"\n                        onChange={onChange}\n                        placeholder=\"Email\"\n                        prefixIcon={<UserOutlined />}\n                        size=\"large\"\n                        testId=\"email-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n\n              <Col xs={24}>\n                <FormControl error={passwordError} label=\"Password\">\n                  <Controller\n                    control={control}\n                    name=\"password\"\n                    render={({field: {value, onChange}}) => (\n                      <PasswordField\n                        ariaLabel=\"password\"\n                        error={!!passwordError}\n                        name=\"password\"\n                        onChange={onChange}\n                        placeholder=\"Password\"\n                        prefixIcon={<KeyOutlined />}\n                        size=\"large\"\n                        testId=\"password-input\"\n                        value={value}\n                      />\n                    )}\n                  />\n                </FormControl>\n\n                <Col xs={24}>\n                  {errors.password?.message && <PasswordHints />}\n                </Col>\n              </Col>\n            </Row>\n\n            <Row justify=\"end\">\n              <Link to={NAVIGATION_ROUTES.forgotPassword.path}>\n                Forgot password?\n              </Link>\n            </Row>\n\n            <Row>\n              <FullWidthLoadingButton\n                disabled={loading}\n                htmlType=\"submit\"\n                icon={<LoginOutlined />}\n                loading={loading}\n                size=\"large\"\n                testId=\"login-action-button\"\n              >\n                Login\n              </FullWidthLoadingButton>\n            </Row>\n\n            <Row align=\"middle\" justify=\"center\">\n              <Link to={NAVIGATION_ROUTES.login.path}>Have an account?</Link>\n            </Row>\n          </Card>\n        </OnboardingForm>\n      </Col>\n    </StyledRow>\n  );\n};\n\nexport default Signup;\n","/**\n * The number 50 is the scale of the color according to Figma\n * @see https://www.figma.com/file/WCipxn54SiYJSVpZ3uTUW5/BiomeDx-Styleguide-und-Report-%234?node-id=13%3A140\n */\n\nconst highlightText = '#ffc069';\n\nconst lightTheme = {\n  red: 'red',\n  blue5: '#e7f2fe',\n  blue50: '#047CB3',\n  blue90: '#011e2f',\n  highlightText,\n};\n\nconst darkTheme = {\n  red: '#ff7777',\n  blue5: '#e7f2fe',\n  blue50: '#047CB3',\n  blue90: '#011e2f',\n  highlightText,\n};\n\nexport type ThemeProps = typeof darkTheme;\nexport {lightTheme, darkTheme};\n","import {Space as AntDesignSpaceProvider} from 'antd';\nimport React, {useEffect} from 'react';\nimport {\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\n// import 'antd/dist/antd.less';\n// import 'antd/dist/antd.dark.less';\nimport {ThemeProvider} from 'styled-components';\n// import AppLoading from './components/AppLoading/AppLoading';\nimport OverlayLoading from './components/Loading/OverlayLoading';\nimport NavBar from './components/NavBar/NavBar';\nimport NavBarProvider from './components/NavBarProvider/NavBarProvider';\nimport useFetchProfile from './components/Profile/hooks/fetchProfileHook';\n// import OrderAnalysisProvider from './components/OrderAnalysisProvider/OrderAnalysisProvider';\n// import ProfileContainer from './components/ProfileContainer/ProfileContainer';\nimport ViewportProvider from './components/WindowViewport/ViewportProvider';\nimport NAVIGATION_ROUTES from './config/NavigationRoutes';\nimport Dashboard from './pages/Dashboard';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Jobs from './pages/Jobs';\nimport JobStatistics from './pages/JobStatistics';\nimport Login from './pages/Login';\nimport ResetPassword from './pages/ResetPassword';\nimport Signup from './pages/Signup';\nimport {lightTheme} from './styles/Theme';\n\nconst {\n  basePath,\n  dashboard,\n  forgotPassword,\n  jobs,\n  login,\n  resetPassword,\n  signup,\n  statistics,\n} = NAVIGATION_ROUTES;\n\nconst App: React.FC = () => {\n  const {loading, data, fetchProfile} = useFetchProfile();\n\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n\n  if (loading) return <OverlayLoading />;\n\n  return (\n    <NavBarProvider>\n      <NavBar isAuthorized={!!data} />\n      <Switch>\n        <Route {...jobs} component={Jobs} />\n        {data && <Route {...dashboard} component={Dashboard} />}\n        <Route {...statistics} component={JobStatistics} />\n        <Redirect to={statistics.path} />\n      </Switch>\n    </NavBarProvider>\n  );\n};\n\nconst AppWithAuth: React.FC = () => (\n  <ThemeProvider theme={{colors: lightTheme}}>\n    <ViewportProvider>\n      <Router basename={basePath.path}>\n        <AntDesignSpaceProvider>\n          <Switch>\n            <Route {...login} component={Login} />\n            <Route {...signup} component={Signup} />\n            <Route {...forgotPassword} component={ForgotPassword} />\n            <Route\n              component={ResetPassword}\n              exact={resetPassword.exact}\n              path={`${resetPassword.path}${resetPassword.params}`}\n            />\n            <Route {...statistics} component={App} />\n          </Switch>\n        </AntDesignSpaceProvider>\n      </Router>\n    </ViewportProvider>\n  </ThemeProvider>\n);\n\nexport default AppWithAuth;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Normalize} from 'styled-normalize';\nimport './index.less';\n\nimport App from './App';\n// import environment from './config/environment';\nimport reportWebVitals from './reportWebVitals';\n\n// const {appVersion, envName, sentryDsn, isProduction} = environment;\n\nReactDOM.render(\n  <>\n    <Normalize />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}